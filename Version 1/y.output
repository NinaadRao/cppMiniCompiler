Terminals unused in grammar

   AND
   OR
   NO_ELSE


Rules useless in parser due to conflicts

   47 assignment_st_for: %empty


State 22 conflicts: 3 shift/reduce
State 42 conflicts: 8 reduce/reduce
State 70 conflicts: 1 reduce/reduce
State 90 conflicts: 1 reduce/reduce
State 105 conflicts: 1 shift/reduce
State 106 conflicts: 1 shift/reduce
State 109 conflicts: 3 shift/reduce, 1 reduce/reduce
State 122 conflicts: 1 shift/reduce
State 134 conflicts: 1 shift/reduce


Grammar

    0 $accept: init $end

    1 init: init declaration
    2     | init func_declaration
    3     | %empty

    4 declaration: type assignment_st ';'
    5            | assignment_st ';'
    6            | type array_st ';'

    7 array_st: ID '[' NUM ']'

    8 array_st_usage: ID '[' NUM ']'

    9 func_declaration: type ID '(' arg_list_optional ')' compound_st
   10                 | type MAIN '(' arg_list_optional ')' compound_st

   11 func_call: ID '(' arg_list_call ')' ';'

   12 compound_st: '{' STATEMENT_STRUCTURE

   13 STATEMENT_STRUCTURE: statement_structure CLOSE

   14 CLOSE: '}'

   15 statement_structure: statement_structure statement
   16                    | statement

   17 statement: declaration
   18          | while_stmt
   19          | for_stmt
   20          | if_stmt

   21 for_stmt: FOR '(' assignment_st_for expression_for ';' assignment_st_for_1 ')' statement
   22         | FOR '(' assignment_st_for expression_for ';' assignment_st_for_1 ')' compound_st
   23         | FOR '(' assignment_st_for_1 ';' expression_for ';' assignment_st_for_1 ')' compound_st
   24         | FOR '(' assignment_st_for_1 ';' expression_for ';' assignment_st_for_1 ')' statement
   25         | FOR '(' assignment_st_for_1 ';' ';' ')' compound_st
   26         | FOR '(' ';' ';' ')' statement
   27         | FOR '(' ';' ';' ')' compound_st

   28 while_stmt: WHILE '(' expression ')' statement
   29           | WHILE '(' expression ')' compound_st

   30 start_if_stmt: IF '(' expression ')' statement

   31 start_if_compound_st: IF '(' expression ')' compound_st

   32 if_stmt: start_if_stmt
   33        | start_if_compound_st
   34        | start_if_stmt ELSE statement
   35        | start_if_stmt ELSE compound_st
   36        | start_if_compound_st ELSE statement
   37        | start_if_compound_st ELSE compound_st

   38 arg_list_optional: arg_list_actual
   39                  | %empty

   40 arg_list_call: arg_list_call_actual
   41              | %empty

   42 arg_list_call_actual: arg_list_call_actual ',' ID
   43                     | ID

   44 arg_list_actual: arg_list_actual ',' arg_final
   45                | arg_final

   46 arg_final: type ID

   47 assignment_st_for: %empty
   48                  | declaration

   49 assignment_st_for_1: %empty
   50                    | assignment_st

   51 assignment_st: ID '=' assignment_st
   52              | assignment_st ',' assignment_st
   53              | assignment_st '+' assignment_st_t
   54              | assignment_st '-' assignment_st_t
   55              | assignment_st_t

   56 assignment_st_t: assignment_st_t '*' assignment_st_f
   57                | assignment_st_t '/' assignment_st_f
   58                | assignment_st_t '%' assignment_st_f
   59                | assignment_st_f

   60 assignment_st_f: '(' assignment_st ')'
   61                | '-' '(' assignment_st ')'
   62                | DM ID
   63                | DP ID
   64                | DP NUM
   65                | DM NUM
   66                | ID DP
   67                | ID DM
   68                | NUM DP
   69                | NUM DM
   70                | '+' NUM
   71                | '-' NUM
   72                | '+' ID
   73                | '-' ID
   74                | '*' ID
   75                | AMP ID
   76                | ID
   77                | NUM
   78                | '*' assignment_st
   79                | array_st_usage
   80                | func_call

   81 type: INT
   82     | FLOAT
   83     | CHAR
   84     | DOUBLE
   85     | VOID

   86 expression_for: %empty
   87               | expression

   88 expression: expression LE expression
   89           | expression GE expression
   90           | expression NE expression
   91           | expression EQ expression
   92           | expression GT expression
   93           | expression LT expression
   94           | ID
   95           | NUM


Terminals, with rules where they appear

$end (0) 0
'%' (37) 58
'(' (40) 9 10 11 21 22 23 24 25 26 27 28 29 30 31 60 61
')' (41) 9 10 11 21 22 23 24 25 26 27 28 29 30 31 60 61
'*' (42) 56 74 78
'+' (43) 53 70 72
',' (44) 42 44 52
'-' (45) 54 61 71 73
'/' (47) 57
';' (59) 4 5 6 11 21 22 23 24 25 26 27
'=' (61) 51
'[' (91) 7 8
']' (93) 7 8
'{' (123) 12
'}' (125) 14
error (256)
ID (258) 7 8 9 11 42 43 46 51 62 63 66 67 72 73 74 75 76 94
NUM (259) 7 8 64 65 68 69 70 71 77 95
INT (260) 81
FLOAT (261) 82
CHAR (262) 83
DOUBLE (263) 84
VOID (264) 85
AMP (265) 75
DM (266) 62 65 67 69
DP (267) 63 64 66 68
FOR (268) 21 22 23 24 25 26 27
WHILE (269) 28 29
IF (270) 30 31
ELSE (271) 34 35 36 37
MAIN (272) 10
AND (273)
OR (274)
LE (275) 88
GE (276) 89
EQ (277) 91
NE (278) 90
LT (279) 93
GT (280) 92
NO_ELSE (281)


Nonterminals, with rules where they appear

$accept (41)
    on left: 0
init (42)
    on left: 1 2 3, on right: 0 1 2
declaration (43)
    on left: 4 5 6, on right: 1 17 48
array_st (44)
    on left: 7, on right: 6
array_st_usage (45)
    on left: 8, on right: 79
func_declaration (46)
    on left: 9 10, on right: 2
func_call (47)
    on left: 11, on right: 80
compound_st (48)
    on left: 12, on right: 9 10 22 23 25 27 29 31 35 37
STATEMENT_STRUCTURE (49)
    on left: 13, on right: 12
CLOSE (50)
    on left: 14, on right: 13
statement_structure (51)
    on left: 15 16, on right: 13 15
statement (52)
    on left: 17 18 19 20, on right: 15 16 21 24 26 28 30 34 36
for_stmt (53)
    on left: 21 22 23 24 25 26 27, on right: 19
while_stmt (54)
    on left: 28 29, on right: 18
start_if_stmt (55)
    on left: 30, on right: 32 34 35
start_if_compound_st (56)
    on left: 31, on right: 33 36 37
if_stmt (57)
    on left: 32 33 34 35 36 37, on right: 20
arg_list_optional (58)
    on left: 38 39, on right: 9 10
arg_list_call (59)
    on left: 40 41, on right: 11
arg_list_call_actual (60)
    on left: 42 43, on right: 40 42
arg_list_actual (61)
    on left: 44 45, on right: 38 44
arg_final (62)
    on left: 46, on right: 44 45
assignment_st_for (63)
    on left: 47 48, on right: 21 22
assignment_st_for_1 (64)
    on left: 49 50, on right: 21 22 23 24 25
assignment_st (65)
    on left: 51 52 53 54 55, on right: 4 5 50 51 52 53 54 60 61 78
assignment_st_t (66)
    on left: 56 57 58 59, on right: 53 54 55 56 57 58
assignment_st_f (67)
    on left: 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77
    78 79 80, on right: 56 57 58 59
type (68)
    on left: 81 82 83 84 85, on right: 4 6 9 10 46
expression_for (69)
    on left: 86 87, on right: 21 22 23 24
expression (70)
    on left: 88 89 90 91 92 93 94 95, on right: 28 29 30 31 87 88 89
    90 91 92 93


State 0

    0 $accept: . init $end

    $default  reduce using rule 3 (init)

    init  go to state 1


State 1

    0 $accept: init . $end
    1 init: init . declaration
    2     | init . func_declaration

    $end    shift, and go to state 2
    ID      shift, and go to state 3
    NUM     shift, and go to state 4
    INT     shift, and go to state 5
    FLOAT   shift, and go to state 6
    CHAR    shift, and go to state 7
    DOUBLE  shift, and go to state 8
    VOID    shift, and go to state 9
    AMP     shift, and go to state 10
    DM      shift, and go to state 11
    DP      shift, and go to state 12
    '+'     shift, and go to state 13
    '-'     shift, and go to state 14
    '*'     shift, and go to state 15
    '('     shift, and go to state 16

    declaration       go to state 17
    array_st_usage    go to state 18
    func_declaration  go to state 19
    func_call         go to state 20
    assignment_st     go to state 21
    assignment_st_t   go to state 22
    assignment_st_f   go to state 23
    type              go to state 24


State 2

    0 $accept: init $end .

    $default  accept


State 3

    8 array_st_usage: ID . '[' NUM ']'
   11 func_call: ID . '(' arg_list_call ')' ';'
   51 assignment_st: ID . '=' assignment_st
   66 assignment_st_f: ID . DP
   67                | ID . DM
   76                | ID .

    DM   shift, and go to state 25
    DP   shift, and go to state 26
    '('  shift, and go to state 27
    '['  shift, and go to state 28
    '='  shift, and go to state 29

    $default  reduce using rule 76 (assignment_st_f)


State 4

   68 assignment_st_f: NUM . DP
   69                | NUM . DM
   77                | NUM .

    DM  shift, and go to state 30
    DP  shift, and go to state 31

    $default  reduce using rule 77 (assignment_st_f)


State 5

   81 type: INT .

    $default  reduce using rule 81 (type)


State 6

   82 type: FLOAT .

    $default  reduce using rule 82 (type)


State 7

   83 type: CHAR .

    $default  reduce using rule 83 (type)


State 8

   84 type: DOUBLE .

    $default  reduce using rule 84 (type)


State 9

   85 type: VOID .

    $default  reduce using rule 85 (type)


State 10

   75 assignment_st_f: AMP . ID

    ID  shift, and go to state 32


State 11

   62 assignment_st_f: DM . ID
   65                | DM . NUM

    ID   shift, and go to state 33
    NUM  shift, and go to state 34


State 12

   63 assignment_st_f: DP . ID
   64                | DP . NUM

    ID   shift, and go to state 35
    NUM  shift, and go to state 36


State 13

   70 assignment_st_f: '+' . NUM
   72                | '+' . ID

    ID   shift, and go to state 37
    NUM  shift, and go to state 38


State 14

   61 assignment_st_f: '-' . '(' assignment_st ')'
   71                | '-' . NUM
   73                | '-' . ID

    ID   shift, and go to state 39
    NUM  shift, and go to state 40
    '('  shift, and go to state 41


State 15

   74 assignment_st_f: '*' . ID
   78                | '*' . assignment_st

    ID   shift, and go to state 42
    NUM  shift, and go to state 4
    AMP  shift, and go to state 10
    DM   shift, and go to state 11
    DP   shift, and go to state 12
    '+'  shift, and go to state 13
    '-'  shift, and go to state 14
    '*'  shift, and go to state 15
    '('  shift, and go to state 16

    array_st_usage   go to state 18
    func_call        go to state 20
    assignment_st    go to state 43
    assignment_st_t  go to state 22
    assignment_st_f  go to state 23


State 16

   60 assignment_st_f: '(' . assignment_st ')'

    ID   shift, and go to state 3
    NUM  shift, and go to state 4
    AMP  shift, and go to state 10
    DM   shift, and go to state 11
    DP   shift, and go to state 12
    '+'  shift, and go to state 13
    '-'  shift, and go to state 14
    '*'  shift, and go to state 15
    '('  shift, and go to state 16

    array_st_usage   go to state 18
    func_call        go to state 20
    assignment_st    go to state 44
    assignment_st_t  go to state 22
    assignment_st_f  go to state 23


State 17

    1 init: init declaration .

    $default  reduce using rule 1 (init)


State 18

   79 assignment_st_f: array_st_usage .

    $default  reduce using rule 79 (assignment_st_f)


State 19

    2 init: init func_declaration .

    $default  reduce using rule 2 (init)


State 20

   80 assignment_st_f: func_call .

    $default  reduce using rule 80 (assignment_st_f)


State 21

    5 declaration: assignment_st . ';'
   52 assignment_st: assignment_st . ',' assignment_st
   53              | assignment_st . '+' assignment_st_t
   54              | assignment_st . '-' assignment_st_t

    '+'  shift, and go to state 45
    '-'  shift, and go to state 46
    ','  shift, and go to state 47
    ';'  shift, and go to state 48


State 22

   55 assignment_st: assignment_st_t .
   56 assignment_st_t: assignment_st_t . '*' assignment_st_f
   57                | assignment_st_t . '/' assignment_st_f
   58                | assignment_st_t . '%' assignment_st_f

    '*'  shift, and go to state 49
    '/'  shift, and go to state 50
    '%'  shift, and go to state 51

    '*'       [reduce using rule 55 (assignment_st)]
    '/'       [reduce using rule 55 (assignment_st)]
    '%'       [reduce using rule 55 (assignment_st)]
    $default  reduce using rule 55 (assignment_st)


State 23

   59 assignment_st_t: assignment_st_f .

    $default  reduce using rule 59 (assignment_st_t)


State 24

    4 declaration: type . assignment_st ';'
    6            | type . array_st ';'
    9 func_declaration: type . ID '(' arg_list_optional ')' compound_st
   10                 | type . MAIN '(' arg_list_optional ')' compound_st

    ID    shift, and go to state 52
    NUM   shift, and go to state 4
    AMP   shift, and go to state 10
    DM    shift, and go to state 11
    DP    shift, and go to state 12
    '+'   shift, and go to state 13
    '-'   shift, and go to state 14
    '*'   shift, and go to state 15
    '('   shift, and go to state 16
    MAIN  shift, and go to state 53

    array_st         go to state 54
    array_st_usage   go to state 18
    func_call        go to state 20
    assignment_st    go to state 55
    assignment_st_t  go to state 22
    assignment_st_f  go to state 23


State 25

   67 assignment_st_f: ID DM .

    $default  reduce using rule 67 (assignment_st_f)


State 26

   66 assignment_st_f: ID DP .

    $default  reduce using rule 66 (assignment_st_f)


State 27

   11 func_call: ID '(' . arg_list_call ')' ';'

    ID  shift, and go to state 56

    $default  reduce using rule 41 (arg_list_call)

    arg_list_call         go to state 57
    arg_list_call_actual  go to state 58


State 28

    8 array_st_usage: ID '[' . NUM ']'

    NUM  shift, and go to state 59


State 29

   51 assignment_st: ID '=' . assignment_st

    ID   shift, and go to state 3
    NUM  shift, and go to state 4
    AMP  shift, and go to state 10
    DM   shift, and go to state 11
    DP   shift, and go to state 12
    '+'  shift, and go to state 13
    '-'  shift, and go to state 14
    '*'  shift, and go to state 15
    '('  shift, and go to state 16

    array_st_usage   go to state 18
    func_call        go to state 20
    assignment_st    go to state 60
    assignment_st_t  go to state 22
    assignment_st_f  go to state 23


State 30

   69 assignment_st_f: NUM DM .

    $default  reduce using rule 69 (assignment_st_f)


State 31

   68 assignment_st_f: NUM DP .

    $default  reduce using rule 68 (assignment_st_f)


State 32

   75 assignment_st_f: AMP ID .

    $default  reduce using rule 75 (assignment_st_f)


State 33

   62 assignment_st_f: DM ID .

    $default  reduce using rule 62 (assignment_st_f)


State 34

   65 assignment_st_f: DM NUM .

    $default  reduce using rule 65 (assignment_st_f)


State 35

   63 assignment_st_f: DP ID .

    $default  reduce using rule 63 (assignment_st_f)


State 36

   64 assignment_st_f: DP NUM .

    $default  reduce using rule 64 (assignment_st_f)


State 37

   72 assignment_st_f: '+' ID .

    $default  reduce using rule 72 (assignment_st_f)


State 38

   70 assignment_st_f: '+' NUM .

    $default  reduce using rule 70 (assignment_st_f)


State 39

   73 assignment_st_f: '-' ID .

    $default  reduce using rule 73 (assignment_st_f)


State 40

   71 assignment_st_f: '-' NUM .

    $default  reduce using rule 71 (assignment_st_f)


State 41

   61 assignment_st_f: '-' '(' . assignment_st ')'

    ID   shift, and go to state 3
    NUM  shift, and go to state 4
    AMP  shift, and go to state 10
    DM   shift, and go to state 11
    DP   shift, and go to state 12
    '+'  shift, and go to state 13
    '-'  shift, and go to state 14
    '*'  shift, and go to state 15
    '('  shift, and go to state 16

    array_st_usage   go to state 18
    func_call        go to state 20
    assignment_st    go to state 61
    assignment_st_t  go to state 22
    assignment_st_f  go to state 23


State 42

    8 array_st_usage: ID . '[' NUM ']'
   11 func_call: ID . '(' arg_list_call ')' ';'
   51 assignment_st: ID . '=' assignment_st
   66 assignment_st_f: ID . DP
   67                | ID . DM
   74                | '*' ID .
   76                | ID .

    DM   shift, and go to state 25
    DP   shift, and go to state 26
    '('  shift, and go to state 27
    '['  shift, and go to state 28
    '='  shift, and go to state 29

    '+'       reduce using rule 74 (assignment_st_f)
    '+'       [reduce using rule 76 (assignment_st_f)]
    '-'       reduce using rule 74 (assignment_st_f)
    '-'       [reduce using rule 76 (assignment_st_f)]
    '*'       reduce using rule 74 (assignment_st_f)
    '*'       [reduce using rule 76 (assignment_st_f)]
    ')'       reduce using rule 74 (assignment_st_f)
    ')'       [reduce using rule 76 (assignment_st_f)]
    ','       reduce using rule 74 (assignment_st_f)
    ','       [reduce using rule 76 (assignment_st_f)]
    '/'       reduce using rule 74 (assignment_st_f)
    '/'       [reduce using rule 76 (assignment_st_f)]
    '%'       reduce using rule 74 (assignment_st_f)
    '%'       [reduce using rule 76 (assignment_st_f)]
    ';'       reduce using rule 74 (assignment_st_f)
    ';'       [reduce using rule 76 (assignment_st_f)]
    $default  reduce using rule 74 (assignment_st_f)


State 43

   52 assignment_st: assignment_st . ',' assignment_st
   53              | assignment_st . '+' assignment_st_t
   54              | assignment_st . '-' assignment_st_t
   78 assignment_st_f: '*' assignment_st .

    $default  reduce using rule 78 (assignment_st_f)


State 44

   52 assignment_st: assignment_st . ',' assignment_st
   53              | assignment_st . '+' assignment_st_t
   54              | assignment_st . '-' assignment_st_t
   60 assignment_st_f: '(' assignment_st . ')'

    '+'  shift, and go to state 45
    '-'  shift, and go to state 46
    ')'  shift, and go to state 62
    ','  shift, and go to state 47


State 45

   53 assignment_st: assignment_st '+' . assignment_st_t

    ID   shift, and go to state 63
    NUM  shift, and go to state 4
    AMP  shift, and go to state 10
    DM   shift, and go to state 11
    DP   shift, and go to state 12
    '+'  shift, and go to state 13
    '-'  shift, and go to state 14
    '*'  shift, and go to state 15
    '('  shift, and go to state 16

    array_st_usage   go to state 18
    func_call        go to state 20
    assignment_st_t  go to state 64
    assignment_st_f  go to state 23


State 46

   54 assignment_st: assignment_st '-' . assignment_st_t

    ID   shift, and go to state 63
    NUM  shift, and go to state 4
    AMP  shift, and go to state 10
    DM   shift, and go to state 11
    DP   shift, and go to state 12
    '+'  shift, and go to state 13
    '-'  shift, and go to state 14
    '*'  shift, and go to state 15
    '('  shift, and go to state 16

    array_st_usage   go to state 18
    func_call        go to state 20
    assignment_st_t  go to state 65
    assignment_st_f  go to state 23


State 47

   52 assignment_st: assignment_st ',' . assignment_st

    ID   shift, and go to state 3
    NUM  shift, and go to state 4
    AMP  shift, and go to state 10
    DM   shift, and go to state 11
    DP   shift, and go to state 12
    '+'  shift, and go to state 13
    '-'  shift, and go to state 14
    '*'  shift, and go to state 15
    '('  shift, and go to state 16

    array_st_usage   go to state 18
    func_call        go to state 20
    assignment_st    go to state 66
    assignment_st_t  go to state 22
    assignment_st_f  go to state 23


State 48

    5 declaration: assignment_st ';' .

    $default  reduce using rule 5 (declaration)


State 49

   56 assignment_st_t: assignment_st_t '*' . assignment_st_f

    ID   shift, and go to state 63
    NUM  shift, and go to state 4
    AMP  shift, and go to state 10
    DM   shift, and go to state 11
    DP   shift, and go to state 12
    '+'  shift, and go to state 13
    '-'  shift, and go to state 14
    '*'  shift, and go to state 15
    '('  shift, and go to state 16

    array_st_usage   go to state 18
    func_call        go to state 20
    assignment_st_f  go to state 67


State 50

   57 assignment_st_t: assignment_st_t '/' . assignment_st_f

    ID   shift, and go to state 63
    NUM  shift, and go to state 4
    AMP  shift, and go to state 10
    DM   shift, and go to state 11
    DP   shift, and go to state 12
    '+'  shift, and go to state 13
    '-'  shift, and go to state 14
    '*'  shift, and go to state 15
    '('  shift, and go to state 16

    array_st_usage   go to state 18
    func_call        go to state 20
    assignment_st_f  go to state 68


State 51

   58 assignment_st_t: assignment_st_t '%' . assignment_st_f

    ID   shift, and go to state 63
    NUM  shift, and go to state 4
    AMP  shift, and go to state 10
    DM   shift, and go to state 11
    DP   shift, and go to state 12
    '+'  shift, and go to state 13
    '-'  shift, and go to state 14
    '*'  shift, and go to state 15
    '('  shift, and go to state 16

    array_st_usage   go to state 18
    func_call        go to state 20
    assignment_st_f  go to state 69


State 52

    7 array_st: ID . '[' NUM ']'
    8 array_st_usage: ID . '[' NUM ']'
    9 func_declaration: type ID . '(' arg_list_optional ')' compound_st
   11 func_call: ID . '(' arg_list_call ')' ';'
   51 assignment_st: ID . '=' assignment_st
   66 assignment_st_f: ID . DP
   67                | ID . DM
   76                | ID .

    DM   shift, and go to state 25
    DP   shift, and go to state 26
    '('  shift, and go to state 70
    '['  shift, and go to state 71
    '='  shift, and go to state 29

    $default  reduce using rule 76 (assignment_st_f)


State 53

   10 func_declaration: type MAIN . '(' arg_list_optional ')' compound_st

    '('  shift, and go to state 72


State 54

    6 declaration: type array_st . ';'

    ';'  shift, and go to state 73


State 55

    4 declaration: type assignment_st . ';'
   52 assignment_st: assignment_st . ',' assignment_st
   53              | assignment_st . '+' assignment_st_t
   54              | assignment_st . '-' assignment_st_t

    '+'  shift, and go to state 45
    '-'  shift, and go to state 46
    ','  shift, and go to state 47
    ';'  shift, and go to state 74


State 56

   43 arg_list_call_actual: ID .

    $default  reduce using rule 43 (arg_list_call_actual)


State 57

   11 func_call: ID '(' arg_list_call . ')' ';'

    ')'  shift, and go to state 75


State 58

   40 arg_list_call: arg_list_call_actual .
   42 arg_list_call_actual: arg_list_call_actual . ',' ID

    ','  shift, and go to state 76

    $default  reduce using rule 40 (arg_list_call)


State 59

    8 array_st_usage: ID '[' NUM . ']'

    ']'  shift, and go to state 77


State 60

   51 assignment_st: ID '=' assignment_st .
   52              | assignment_st . ',' assignment_st
   53              | assignment_st . '+' assignment_st_t
   54              | assignment_st . '-' assignment_st_t

    '+'  shift, and go to state 45
    '-'  shift, and go to state 46

    $default  reduce using rule 51 (assignment_st)


State 61

   52 assignment_st: assignment_st . ',' assignment_st
   53              | assignment_st . '+' assignment_st_t
   54              | assignment_st . '-' assignment_st_t
   61 assignment_st_f: '-' '(' assignment_st . ')'

    '+'  shift, and go to state 45
    '-'  shift, and go to state 46
    ')'  shift, and go to state 78
    ','  shift, and go to state 47


State 62

   60 assignment_st_f: '(' assignment_st ')' .

    $default  reduce using rule 60 (assignment_st_f)


State 63

    8 array_st_usage: ID . '[' NUM ']'
   11 func_call: ID . '(' arg_list_call ')' ';'
   66 assignment_st_f: ID . DP
   67                | ID . DM
   76                | ID .

    DM   shift, and go to state 25
    DP   shift, and go to state 26
    '('  shift, and go to state 27
    '['  shift, and go to state 28

    $default  reduce using rule 76 (assignment_st_f)


State 64

   53 assignment_st: assignment_st '+' assignment_st_t .
   56 assignment_st_t: assignment_st_t . '*' assignment_st_f
   57                | assignment_st_t . '/' assignment_st_f
   58                | assignment_st_t . '%' assignment_st_f

    '*'  shift, and go to state 49
    '/'  shift, and go to state 50
    '%'  shift, and go to state 51

    $default  reduce using rule 53 (assignment_st)


State 65

   54 assignment_st: assignment_st '-' assignment_st_t .
   56 assignment_st_t: assignment_st_t . '*' assignment_st_f
   57                | assignment_st_t . '/' assignment_st_f
   58                | assignment_st_t . '%' assignment_st_f

    '*'  shift, and go to state 49
    '/'  shift, and go to state 50
    '%'  shift, and go to state 51

    $default  reduce using rule 54 (assignment_st)


State 66

   52 assignment_st: assignment_st . ',' assignment_st
   52              | assignment_st ',' assignment_st .
   53              | assignment_st . '+' assignment_st_t
   54              | assignment_st . '-' assignment_st_t

    '+'  shift, and go to state 45
    '-'  shift, and go to state 46
    ','  shift, and go to state 47

    $default  reduce using rule 52 (assignment_st)


State 67

   56 assignment_st_t: assignment_st_t '*' assignment_st_f .

    $default  reduce using rule 56 (assignment_st_t)


State 68

   57 assignment_st_t: assignment_st_t '/' assignment_st_f .

    $default  reduce using rule 57 (assignment_st_t)


State 69

   58 assignment_st_t: assignment_st_t '%' assignment_st_f .

    $default  reduce using rule 58 (assignment_st_t)


State 70

    9 func_declaration: type ID '(' . arg_list_optional ')' compound_st
   11 func_call: ID '(' . arg_list_call ')' ';'

    ID      shift, and go to state 56
    INT     shift, and go to state 5
    FLOAT   shift, and go to state 6
    CHAR    shift, and go to state 7
    DOUBLE  shift, and go to state 8
    VOID    shift, and go to state 9

    ')'       reduce using rule 39 (arg_list_optional)
    ')'       [reduce using rule 41 (arg_list_call)]
    $default  reduce using rule 39 (arg_list_optional)

    arg_list_optional     go to state 79
    arg_list_call         go to state 57
    arg_list_call_actual  go to state 58
    arg_list_actual       go to state 80
    arg_final             go to state 81
    type                  go to state 82


State 71

    7 array_st: ID '[' . NUM ']'
    8 array_st_usage: ID '[' . NUM ']'

    NUM  shift, and go to state 83


State 72

   10 func_declaration: type MAIN '(' . arg_list_optional ')' compound_st

    INT     shift, and go to state 5
    FLOAT   shift, and go to state 6
    CHAR    shift, and go to state 7
    DOUBLE  shift, and go to state 8
    VOID    shift, and go to state 9

    $default  reduce using rule 39 (arg_list_optional)

    arg_list_optional  go to state 84
    arg_list_actual    go to state 80
    arg_final          go to state 81
    type               go to state 82


State 73

    6 declaration: type array_st ';' .

    $default  reduce using rule 6 (declaration)


State 74

    4 declaration: type assignment_st ';' .

    $default  reduce using rule 4 (declaration)


State 75

   11 func_call: ID '(' arg_list_call ')' . ';'

    ';'  shift, and go to state 85


State 76

   42 arg_list_call_actual: arg_list_call_actual ',' . ID

    ID  shift, and go to state 86


State 77

    8 array_st_usage: ID '[' NUM ']' .

    $default  reduce using rule 8 (array_st_usage)


State 78

   61 assignment_st_f: '-' '(' assignment_st ')' .

    $default  reduce using rule 61 (assignment_st_f)


State 79

    9 func_declaration: type ID '(' arg_list_optional . ')' compound_st

    ')'  shift, and go to state 87


State 80

   38 arg_list_optional: arg_list_actual .
   44 arg_list_actual: arg_list_actual . ',' arg_final

    ','  shift, and go to state 88

    $default  reduce using rule 38 (arg_list_optional)


State 81

   45 arg_list_actual: arg_final .

    $default  reduce using rule 45 (arg_list_actual)


State 82

   46 arg_final: type . ID

    ID  shift, and go to state 89


State 83

    7 array_st: ID '[' NUM . ']'
    8 array_st_usage: ID '[' NUM . ']'

    ']'  shift, and go to state 90


State 84

   10 func_declaration: type MAIN '(' arg_list_optional . ')' compound_st

    ')'  shift, and go to state 91


State 85

   11 func_call: ID '(' arg_list_call ')' ';' .

    $default  reduce using rule 11 (func_call)


State 86

   42 arg_list_call_actual: arg_list_call_actual ',' ID .

    $default  reduce using rule 42 (arg_list_call_actual)


State 87

    9 func_declaration: type ID '(' arg_list_optional ')' . compound_st

    '{'  shift, and go to state 92

    compound_st  go to state 93


State 88

   44 arg_list_actual: arg_list_actual ',' . arg_final

    INT     shift, and go to state 5
    FLOAT   shift, and go to state 6
    CHAR    shift, and go to state 7
    DOUBLE  shift, and go to state 8
    VOID    shift, and go to state 9

    arg_final  go to state 94
    type       go to state 82


State 89

   46 arg_final: type ID .

    $default  reduce using rule 46 (arg_final)


State 90

    7 array_st: ID '[' NUM ']' .
    8 array_st_usage: ID '[' NUM ']' .

    ';'       reduce using rule 7 (array_st)
    ';'       [reduce using rule 8 (array_st_usage)]
    $default  reduce using rule 8 (array_st_usage)


State 91

   10 func_declaration: type MAIN '(' arg_list_optional ')' . compound_st

    '{'  shift, and go to state 92

    compound_st  go to state 95


State 92

   12 compound_st: '{' . STATEMENT_STRUCTURE

    ID      shift, and go to state 3
    NUM     shift, and go to state 4
    INT     shift, and go to state 5
    FLOAT   shift, and go to state 6
    CHAR    shift, and go to state 7
    DOUBLE  shift, and go to state 8
    VOID    shift, and go to state 9
    AMP     shift, and go to state 10
    DM      shift, and go to state 11
    DP      shift, and go to state 12
    '+'     shift, and go to state 13
    '-'     shift, and go to state 14
    '*'     shift, and go to state 15
    '('     shift, and go to state 16
    FOR     shift, and go to state 96
    WHILE   shift, and go to state 97
    IF      shift, and go to state 98

    declaration           go to state 99
    array_st_usage        go to state 18
    func_call             go to state 20
    STATEMENT_STRUCTURE   go to state 100
    statement_structure   go to state 101
    statement             go to state 102
    for_stmt              go to state 103
    while_stmt            go to state 104
    start_if_stmt         go to state 105
    start_if_compound_st  go to state 106
    if_stmt               go to state 107
    assignment_st         go to state 21
    assignment_st_t       go to state 22
    assignment_st_f       go to state 23
    type                  go to state 108


State 93

    9 func_declaration: type ID '(' arg_list_optional ')' compound_st .

    $default  reduce using rule 9 (func_declaration)


State 94

   44 arg_list_actual: arg_list_actual ',' arg_final .

    $default  reduce using rule 44 (arg_list_actual)


State 95

   10 func_declaration: type MAIN '(' arg_list_optional ')' compound_st .

    $default  reduce using rule 10 (func_declaration)


State 96

   21 for_stmt: FOR . '(' assignment_st_for expression_for ';' assignment_st_for_1 ')' statement
   22         | FOR . '(' assignment_st_for expression_for ';' assignment_st_for_1 ')' compound_st
   23         | FOR . '(' assignment_st_for_1 ';' expression_for ';' assignment_st_for_1 ')' compound_st
   24         | FOR . '(' assignment_st_for_1 ';' expression_for ';' assignment_st_for_1 ')' statement
   25         | FOR . '(' assignment_st_for_1 ';' ';' ')' compound_st
   26         | FOR . '(' ';' ';' ')' statement
   27         | FOR . '(' ';' ';' ')' compound_st

    '('  shift, and go to state 109


State 97

   28 while_stmt: WHILE . '(' expression ')' statement
   29           | WHILE . '(' expression ')' compound_st

    '('  shift, and go to state 110


State 98

   30 start_if_stmt: IF . '(' expression ')' statement
   31 start_if_compound_st: IF . '(' expression ')' compound_st

    '('  shift, and go to state 111


State 99

   17 statement: declaration .

    $default  reduce using rule 17 (statement)


State 100

   12 compound_st: '{' STATEMENT_STRUCTURE .

    $default  reduce using rule 12 (compound_st)


State 101

   13 STATEMENT_STRUCTURE: statement_structure . CLOSE
   15 statement_structure: statement_structure . statement

    ID      shift, and go to state 3
    NUM     shift, and go to state 4
    INT     shift, and go to state 5
    FLOAT   shift, and go to state 6
    CHAR    shift, and go to state 7
    DOUBLE  shift, and go to state 8
    VOID    shift, and go to state 9
    AMP     shift, and go to state 10
    DM      shift, and go to state 11
    DP      shift, and go to state 12
    '+'     shift, and go to state 13
    '-'     shift, and go to state 14
    '*'     shift, and go to state 15
    '('     shift, and go to state 16
    FOR     shift, and go to state 96
    WHILE   shift, and go to state 97
    IF      shift, and go to state 98
    '}'     shift, and go to state 112

    declaration           go to state 99
    array_st_usage        go to state 18
    func_call             go to state 20
    CLOSE                 go to state 113
    statement             go to state 114
    for_stmt              go to state 103
    while_stmt            go to state 104
    start_if_stmt         go to state 105
    start_if_compound_st  go to state 106
    if_stmt               go to state 107
    assignment_st         go to state 21
    assignment_st_t       go to state 22
    assignment_st_f       go to state 23
    type                  go to state 108


State 102

   16 statement_structure: statement .

    $default  reduce using rule 16 (statement_structure)


State 103

   19 statement: for_stmt .

    $default  reduce using rule 19 (statement)


State 104

   18 statement: while_stmt .

    $default  reduce using rule 18 (statement)


State 105

   32 if_stmt: start_if_stmt .
   34        | start_if_stmt . ELSE statement
   35        | start_if_stmt . ELSE compound_st

    ELSE  shift, and go to state 115

    ELSE      [reduce using rule 32 (if_stmt)]
    $default  reduce using rule 32 (if_stmt)


State 106

   33 if_stmt: start_if_compound_st .
   36        | start_if_compound_st . ELSE statement
   37        | start_if_compound_st . ELSE compound_st

    ELSE  shift, and go to state 116

    ELSE      [reduce using rule 33 (if_stmt)]
    $default  reduce using rule 33 (if_stmt)


State 107

   20 statement: if_stmt .

    $default  reduce using rule 20 (statement)


State 108

    4 declaration: type . assignment_st ';'
    6            | type . array_st ';'

    ID   shift, and go to state 117
    NUM  shift, and go to state 4
    AMP  shift, and go to state 10
    DM   shift, and go to state 11
    DP   shift, and go to state 12
    '+'  shift, and go to state 13
    '-'  shift, and go to state 14
    '*'  shift, and go to state 15
    '('  shift, and go to state 16

    array_st         go to state 54
    array_st_usage   go to state 18
    func_call        go to state 20
    assignment_st    go to state 55
    assignment_st_t  go to state 22
    assignment_st_f  go to state 23


State 109

   21 for_stmt: FOR '(' . assignment_st_for expression_for ';' assignment_st_for_1 ')' statement
   22         | FOR '(' . assignment_st_for expression_for ';' assignment_st_for_1 ')' compound_st
   23         | FOR '(' . assignment_st_for_1 ';' expression_for ';' assignment_st_for_1 ')' compound_st
   24         | FOR '(' . assignment_st_for_1 ';' expression_for ';' assignment_st_for_1 ')' statement
   25         | FOR '(' . assignment_st_for_1 ';' ';' ')' compound_st
   26         | FOR '(' . ';' ';' ')' statement
   27         | FOR '(' . ';' ';' ')' compound_st

    ID      shift, and go to state 3
    NUM     shift, and go to state 4
    INT     shift, and go to state 5
    FLOAT   shift, and go to state 6
    CHAR    shift, and go to state 7
    DOUBLE  shift, and go to state 8
    VOID    shift, and go to state 9
    AMP     shift, and go to state 10
    DM      shift, and go to state 11
    DP      shift, and go to state 12
    '+'     shift, and go to state 13
    '-'     shift, and go to state 14
    '*'     shift, and go to state 15
    '('     shift, and go to state 16
    ';'     shift, and go to state 118

    ID   [reduce using rule 47 (assignment_st_for)]
    NUM  [reduce using rule 47 (assignment_st_for)]
    ';'  [reduce using rule 47 (assignment_st_for)]
    ';'  [reduce using rule 49 (assignment_st_for_1)]

    declaration          go to state 119
    array_st_usage       go to state 18
    func_call            go to state 20
    assignment_st_for    go to state 120
    assignment_st_for_1  go to state 121
    assignment_st        go to state 122
    assignment_st_t      go to state 22
    assignment_st_f      go to state 23
    type                 go to state 108


State 110

   28 while_stmt: WHILE '(' . expression ')' statement
   29           | WHILE '(' . expression ')' compound_st

    ID   shift, and go to state 123
    NUM  shift, and go to state 124

    expression  go to state 125


State 111

   30 start_if_stmt: IF '(' . expression ')' statement
   31 start_if_compound_st: IF '(' . expression ')' compound_st

    ID   shift, and go to state 123
    NUM  shift, and go to state 124

    expression  go to state 126


State 112

   14 CLOSE: '}' .

    $default  reduce using rule 14 (CLOSE)


State 113

   13 STATEMENT_STRUCTURE: statement_structure CLOSE .

    $default  reduce using rule 13 (STATEMENT_STRUCTURE)


State 114

   15 statement_structure: statement_structure statement .

    $default  reduce using rule 15 (statement_structure)


State 115

   34 if_stmt: start_if_stmt ELSE . statement
   35        | start_if_stmt ELSE . compound_st

    ID      shift, and go to state 3
    NUM     shift, and go to state 4
    INT     shift, and go to state 5
    FLOAT   shift, and go to state 6
    CHAR    shift, and go to state 7
    DOUBLE  shift, and go to state 8
    VOID    shift, and go to state 9
    AMP     shift, and go to state 10
    DM      shift, and go to state 11
    DP      shift, and go to state 12
    '+'     shift, and go to state 13
    '-'     shift, and go to state 14
    '*'     shift, and go to state 15
    '('     shift, and go to state 16
    FOR     shift, and go to state 96
    WHILE   shift, and go to state 97
    IF      shift, and go to state 98
    '{'     shift, and go to state 92

    declaration           go to state 99
    array_st_usage        go to state 18
    func_call             go to state 20
    compound_st           go to state 127
    statement             go to state 128
    for_stmt              go to state 103
    while_stmt            go to state 104
    start_if_stmt         go to state 105
    start_if_compound_st  go to state 106
    if_stmt               go to state 107
    assignment_st         go to state 21
    assignment_st_t       go to state 22
    assignment_st_f       go to state 23
    type                  go to state 108


State 116

   36 if_stmt: start_if_compound_st ELSE . statement
   37        | start_if_compound_st ELSE . compound_st

    ID      shift, and go to state 3
    NUM     shift, and go to state 4
    INT     shift, and go to state 5
    FLOAT   shift, and go to state 6
    CHAR    shift, and go to state 7
    DOUBLE  shift, and go to state 8
    VOID    shift, and go to state 9
    AMP     shift, and go to state 10
    DM      shift, and go to state 11
    DP      shift, and go to state 12
    '+'     shift, and go to state 13
    '-'     shift, and go to state 14
    '*'     shift, and go to state 15
    '('     shift, and go to state 16
    FOR     shift, and go to state 96
    WHILE   shift, and go to state 97
    IF      shift, and go to state 98
    '{'     shift, and go to state 92

    declaration           go to state 99
    array_st_usage        go to state 18
    func_call             go to state 20
    compound_st           go to state 129
    statement             go to state 130
    for_stmt              go to state 103
    while_stmt            go to state 104
    start_if_stmt         go to state 105
    start_if_compound_st  go to state 106
    if_stmt               go to state 107
    assignment_st         go to state 21
    assignment_st_t       go to state 22
    assignment_st_f       go to state 23
    type                  go to state 108


State 117

    7 array_st: ID . '[' NUM ']'
    8 array_st_usage: ID . '[' NUM ']'
   11 func_call: ID . '(' arg_list_call ')' ';'
   51 assignment_st: ID . '=' assignment_st
   66 assignment_st_f: ID . DP
   67                | ID . DM
   76                | ID .

    DM   shift, and go to state 25
    DP   shift, and go to state 26
    '('  shift, and go to state 27
    '['  shift, and go to state 71
    '='  shift, and go to state 29

    $default  reduce using rule 76 (assignment_st_f)


State 118

   26 for_stmt: FOR '(' ';' . ';' ')' statement
   27         | FOR '(' ';' . ';' ')' compound_st

    ';'  shift, and go to state 131


State 119

   48 assignment_st_for: declaration .

    $default  reduce using rule 48 (assignment_st_for)


State 120

   21 for_stmt: FOR '(' assignment_st_for . expression_for ';' assignment_st_for_1 ')' statement
   22         | FOR '(' assignment_st_for . expression_for ';' assignment_st_for_1 ')' compound_st

    ID   shift, and go to state 123
    NUM  shift, and go to state 124

    $default  reduce using rule 86 (expression_for)

    expression_for  go to state 132
    expression      go to state 133


State 121

   23 for_stmt: FOR '(' assignment_st_for_1 . ';' expression_for ';' assignment_st_for_1 ')' compound_st
   24         | FOR '(' assignment_st_for_1 . ';' expression_for ';' assignment_st_for_1 ')' statement
   25         | FOR '(' assignment_st_for_1 . ';' ';' ')' compound_st

    ';'  shift, and go to state 134


State 122

    5 declaration: assignment_st . ';'
   50 assignment_st_for_1: assignment_st .
   52 assignment_st: assignment_st . ',' assignment_st
   53              | assignment_st . '+' assignment_st_t
   54              | assignment_st . '-' assignment_st_t

    '+'  shift, and go to state 45
    '-'  shift, and go to state 46
    ','  shift, and go to state 47
    ';'  shift, and go to state 48

    ';'  [reduce using rule 50 (assignment_st_for_1)]


State 123

   94 expression: ID .

    $default  reduce using rule 94 (expression)


State 124

   95 expression: NUM .

    $default  reduce using rule 95 (expression)


State 125

   28 while_stmt: WHILE '(' expression . ')' statement
   29           | WHILE '(' expression . ')' compound_st
   88 expression: expression . LE expression
   89           | expression . GE expression
   90           | expression . NE expression
   91           | expression . EQ expression
   92           | expression . GT expression
   93           | expression . LT expression

    ')'  shift, and go to state 135
    LE   shift, and go to state 136
    GE   shift, and go to state 137
    EQ   shift, and go to state 138
    NE   shift, and go to state 139
    LT   shift, and go to state 140
    GT   shift, and go to state 141


State 126

   30 start_if_stmt: IF '(' expression . ')' statement
   31 start_if_compound_st: IF '(' expression . ')' compound_st
   88 expression: expression . LE expression
   89           | expression . GE expression
   90           | expression . NE expression
   91           | expression . EQ expression
   92           | expression . GT expression
   93           | expression . LT expression

    ')'  shift, and go to state 142
    LE   shift, and go to state 136
    GE   shift, and go to state 137
    EQ   shift, and go to state 138
    NE   shift, and go to state 139
    LT   shift, and go to state 140
    GT   shift, and go to state 141


State 127

   35 if_stmt: start_if_stmt ELSE compound_st .

    $default  reduce using rule 35 (if_stmt)


State 128

   34 if_stmt: start_if_stmt ELSE statement .

    $default  reduce using rule 34 (if_stmt)


State 129

   37 if_stmt: start_if_compound_st ELSE compound_st .

    $default  reduce using rule 37 (if_stmt)


State 130

   36 if_stmt: start_if_compound_st ELSE statement .

    $default  reduce using rule 36 (if_stmt)


State 131

   26 for_stmt: FOR '(' ';' ';' . ')' statement
   27         | FOR '(' ';' ';' . ')' compound_st

    ')'  shift, and go to state 143


State 132

   21 for_stmt: FOR '(' assignment_st_for expression_for . ';' assignment_st_for_1 ')' statement
   22         | FOR '(' assignment_st_for expression_for . ';' assignment_st_for_1 ')' compound_st

    ';'  shift, and go to state 144


State 133

   87 expression_for: expression .
   88 expression: expression . LE expression
   89           | expression . GE expression
   90           | expression . NE expression
   91           | expression . EQ expression
   92           | expression . GT expression
   93           | expression . LT expression

    LE  shift, and go to state 136
    GE  shift, and go to state 137
    EQ  shift, and go to state 138
    NE  shift, and go to state 139
    LT  shift, and go to state 140
    GT  shift, and go to state 141

    $default  reduce using rule 87 (expression_for)


State 134

   23 for_stmt: FOR '(' assignment_st_for_1 ';' . expression_for ';' assignment_st_for_1 ')' compound_st
   24         | FOR '(' assignment_st_for_1 ';' . expression_for ';' assignment_st_for_1 ')' statement
   25         | FOR '(' assignment_st_for_1 ';' . ';' ')' compound_st

    ID   shift, and go to state 123
    NUM  shift, and go to state 124
    ';'  shift, and go to state 145

    ';'  [reduce using rule 86 (expression_for)]

    expression_for  go to state 146
    expression      go to state 133


State 135

   28 while_stmt: WHILE '(' expression ')' . statement
   29           | WHILE '(' expression ')' . compound_st

    ID      shift, and go to state 3
    NUM     shift, and go to state 4
    INT     shift, and go to state 5
    FLOAT   shift, and go to state 6
    CHAR    shift, and go to state 7
    DOUBLE  shift, and go to state 8
    VOID    shift, and go to state 9
    AMP     shift, and go to state 10
    DM      shift, and go to state 11
    DP      shift, and go to state 12
    '+'     shift, and go to state 13
    '-'     shift, and go to state 14
    '*'     shift, and go to state 15
    '('     shift, and go to state 16
    FOR     shift, and go to state 96
    WHILE   shift, and go to state 97
    IF      shift, and go to state 98
    '{'     shift, and go to state 92

    declaration           go to state 99
    array_st_usage        go to state 18
    func_call             go to state 20
    compound_st           go to state 147
    statement             go to state 148
    for_stmt              go to state 103
    while_stmt            go to state 104
    start_if_stmt         go to state 105
    start_if_compound_st  go to state 106
    if_stmt               go to state 107
    assignment_st         go to state 21
    assignment_st_t       go to state 22
    assignment_st_f       go to state 23
    type                  go to state 108


State 136

   88 expression: expression LE . expression

    ID   shift, and go to state 123
    NUM  shift, and go to state 124

    expression  go to state 149


State 137

   89 expression: expression GE . expression

    ID   shift, and go to state 123
    NUM  shift, and go to state 124

    expression  go to state 150


State 138

   91 expression: expression EQ . expression

    ID   shift, and go to state 123
    NUM  shift, and go to state 124

    expression  go to state 151


State 139

   90 expression: expression NE . expression

    ID   shift, and go to state 123
    NUM  shift, and go to state 124

    expression  go to state 152


State 140

   93 expression: expression LT . expression

    ID   shift, and go to state 123
    NUM  shift, and go to state 124

    expression  go to state 153


State 141

   92 expression: expression GT . expression

    ID   shift, and go to state 123
    NUM  shift, and go to state 124

    expression  go to state 154


State 142

   30 start_if_stmt: IF '(' expression ')' . statement
   31 start_if_compound_st: IF '(' expression ')' . compound_st

    ID      shift, and go to state 3
    NUM     shift, and go to state 4
    INT     shift, and go to state 5
    FLOAT   shift, and go to state 6
    CHAR    shift, and go to state 7
    DOUBLE  shift, and go to state 8
    VOID    shift, and go to state 9
    AMP     shift, and go to state 10
    DM      shift, and go to state 11
    DP      shift, and go to state 12
    '+'     shift, and go to state 13
    '-'     shift, and go to state 14
    '*'     shift, and go to state 15
    '('     shift, and go to state 16
    FOR     shift, and go to state 96
    WHILE   shift, and go to state 97
    IF      shift, and go to state 98
    '{'     shift, and go to state 92

    declaration           go to state 99
    array_st_usage        go to state 18
    func_call             go to state 20
    compound_st           go to state 155
    statement             go to state 156
    for_stmt              go to state 103
    while_stmt            go to state 104
    start_if_stmt         go to state 105
    start_if_compound_st  go to state 106
    if_stmt               go to state 107
    assignment_st         go to state 21
    assignment_st_t       go to state 22
    assignment_st_f       go to state 23
    type                  go to state 108


State 143

   26 for_stmt: FOR '(' ';' ';' ')' . statement
   27         | FOR '(' ';' ';' ')' . compound_st

    ID      shift, and go to state 3
    NUM     shift, and go to state 4
    INT     shift, and go to state 5
    FLOAT   shift, and go to state 6
    CHAR    shift, and go to state 7
    DOUBLE  shift, and go to state 8
    VOID    shift, and go to state 9
    AMP     shift, and go to state 10
    DM      shift, and go to state 11
    DP      shift, and go to state 12
    '+'     shift, and go to state 13
    '-'     shift, and go to state 14
    '*'     shift, and go to state 15
    '('     shift, and go to state 16
    FOR     shift, and go to state 96
    WHILE   shift, and go to state 97
    IF      shift, and go to state 98
    '{'     shift, and go to state 92

    declaration           go to state 99
    array_st_usage        go to state 18
    func_call             go to state 20
    compound_st           go to state 157
    statement             go to state 158
    for_stmt              go to state 103
    while_stmt            go to state 104
    start_if_stmt         go to state 105
    start_if_compound_st  go to state 106
    if_stmt               go to state 107
    assignment_st         go to state 21
    assignment_st_t       go to state 22
    assignment_st_f       go to state 23
    type                  go to state 108


State 144

   21 for_stmt: FOR '(' assignment_st_for expression_for ';' . assignment_st_for_1 ')' statement
   22         | FOR '(' assignment_st_for expression_for ';' . assignment_st_for_1 ')' compound_st

    ID   shift, and go to state 3
    NUM  shift, and go to state 4
    AMP  shift, and go to state 10
    DM   shift, and go to state 11
    DP   shift, and go to state 12
    '+'  shift, and go to state 13
    '-'  shift, and go to state 14
    '*'  shift, and go to state 15
    '('  shift, and go to state 16

    $default  reduce using rule 49 (assignment_st_for_1)

    array_st_usage       go to state 18
    func_call            go to state 20
    assignment_st_for_1  go to state 159
    assignment_st        go to state 160
    assignment_st_t      go to state 22
    assignment_st_f      go to state 23


State 145

   25 for_stmt: FOR '(' assignment_st_for_1 ';' ';' . ')' compound_st

    ')'  shift, and go to state 161


State 146

   23 for_stmt: FOR '(' assignment_st_for_1 ';' expression_for . ';' assignment_st_for_1 ')' compound_st
   24         | FOR '(' assignment_st_for_1 ';' expression_for . ';' assignment_st_for_1 ')' statement

    ';'  shift, and go to state 162


State 147

   29 while_stmt: WHILE '(' expression ')' compound_st .

    $default  reduce using rule 29 (while_stmt)


State 148

   28 while_stmt: WHILE '(' expression ')' statement .

    $default  reduce using rule 28 (while_stmt)


State 149

   88 expression: expression . LE expression
   88           | expression LE expression .
   89           | expression . GE expression
   90           | expression . NE expression
   91           | expression . EQ expression
   92           | expression . GT expression
   93           | expression . LT expression

    $default  reduce using rule 88 (expression)


State 150

   88 expression: expression . LE expression
   89           | expression . GE expression
   89           | expression GE expression .
   90           | expression . NE expression
   91           | expression . EQ expression
   92           | expression . GT expression
   93           | expression . LT expression

    $default  reduce using rule 89 (expression)


State 151

   88 expression: expression . LE expression
   89           | expression . GE expression
   90           | expression . NE expression
   91           | expression . EQ expression
   91           | expression EQ expression .
   92           | expression . GT expression
   93           | expression . LT expression

    $default  reduce using rule 91 (expression)


State 152

   88 expression: expression . LE expression
   89           | expression . GE expression
   90           | expression . NE expression
   90           | expression NE expression .
   91           | expression . EQ expression
   92           | expression . GT expression
   93           | expression . LT expression

    $default  reduce using rule 90 (expression)


State 153

   88 expression: expression . LE expression
   89           | expression . GE expression
   90           | expression . NE expression
   91           | expression . EQ expression
   92           | expression . GT expression
   93           | expression . LT expression
   93           | expression LT expression .

    $default  reduce using rule 93 (expression)


State 154

   88 expression: expression . LE expression
   89           | expression . GE expression
   90           | expression . NE expression
   91           | expression . EQ expression
   92           | expression . GT expression
   92           | expression GT expression .
   93           | expression . LT expression

    $default  reduce using rule 92 (expression)


State 155

   31 start_if_compound_st: IF '(' expression ')' compound_st .

    $default  reduce using rule 31 (start_if_compound_st)


State 156

   30 start_if_stmt: IF '(' expression ')' statement .

    $default  reduce using rule 30 (start_if_stmt)


State 157

   27 for_stmt: FOR '(' ';' ';' ')' compound_st .

    $default  reduce using rule 27 (for_stmt)


State 158

   26 for_stmt: FOR '(' ';' ';' ')' statement .

    $default  reduce using rule 26 (for_stmt)


State 159

   21 for_stmt: FOR '(' assignment_st_for expression_for ';' assignment_st_for_1 . ')' statement
   22         | FOR '(' assignment_st_for expression_for ';' assignment_st_for_1 . ')' compound_st

    ')'  shift, and go to state 163


State 160

   50 assignment_st_for_1: assignment_st .
   52 assignment_st: assignment_st . ',' assignment_st
   53              | assignment_st . '+' assignment_st_t
   54              | assignment_st . '-' assignment_st_t

    '+'  shift, and go to state 45
    '-'  shift, and go to state 46
    ','  shift, and go to state 47

    $default  reduce using rule 50 (assignment_st_for_1)


State 161

   25 for_stmt: FOR '(' assignment_st_for_1 ';' ';' ')' . compound_st

    '{'  shift, and go to state 92

    compound_st  go to state 164


State 162

   23 for_stmt: FOR '(' assignment_st_for_1 ';' expression_for ';' . assignment_st_for_1 ')' compound_st
   24         | FOR '(' assignment_st_for_1 ';' expression_for ';' . assignment_st_for_1 ')' statement

    ID   shift, and go to state 3
    NUM  shift, and go to state 4
    AMP  shift, and go to state 10
    DM   shift, and go to state 11
    DP   shift, and go to state 12
    '+'  shift, and go to state 13
    '-'  shift, and go to state 14
    '*'  shift, and go to state 15
    '('  shift, and go to state 16

    $default  reduce using rule 49 (assignment_st_for_1)

    array_st_usage       go to state 18
    func_call            go to state 20
    assignment_st_for_1  go to state 165
    assignment_st        go to state 160
    assignment_st_t      go to state 22
    assignment_st_f      go to state 23


State 163

   21 for_stmt: FOR '(' assignment_st_for expression_for ';' assignment_st_for_1 ')' . statement
   22         | FOR '(' assignment_st_for expression_for ';' assignment_st_for_1 ')' . compound_st

    ID      shift, and go to state 3
    NUM     shift, and go to state 4
    INT     shift, and go to state 5
    FLOAT   shift, and go to state 6
    CHAR    shift, and go to state 7
    DOUBLE  shift, and go to state 8
    VOID    shift, and go to state 9
    AMP     shift, and go to state 10
    DM      shift, and go to state 11
    DP      shift, and go to state 12
    '+'     shift, and go to state 13
    '-'     shift, and go to state 14
    '*'     shift, and go to state 15
    '('     shift, and go to state 16
    FOR     shift, and go to state 96
    WHILE   shift, and go to state 97
    IF      shift, and go to state 98
    '{'     shift, and go to state 92

    declaration           go to state 99
    array_st_usage        go to state 18
    func_call             go to state 20
    compound_st           go to state 166
    statement             go to state 167
    for_stmt              go to state 103
    while_stmt            go to state 104
    start_if_stmt         go to state 105
    start_if_compound_st  go to state 106
    if_stmt               go to state 107
    assignment_st         go to state 21
    assignment_st_t       go to state 22
    assignment_st_f       go to state 23
    type                  go to state 108


State 164

   25 for_stmt: FOR '(' assignment_st_for_1 ';' ';' ')' compound_st .

    $default  reduce using rule 25 (for_stmt)


State 165

   23 for_stmt: FOR '(' assignment_st_for_1 ';' expression_for ';' assignment_st_for_1 . ')' compound_st
   24         | FOR '(' assignment_st_for_1 ';' expression_for ';' assignment_st_for_1 . ')' statement

    ')'  shift, and go to state 168


State 166

   22 for_stmt: FOR '(' assignment_st_for expression_for ';' assignment_st_for_1 ')' compound_st .

    $default  reduce using rule 22 (for_stmt)


State 167

   21 for_stmt: FOR '(' assignment_st_for expression_for ';' assignment_st_for_1 ')' statement .

    $default  reduce using rule 21 (for_stmt)


State 168

   23 for_stmt: FOR '(' assignment_st_for_1 ';' expression_for ';' assignment_st_for_1 ')' . compound_st
   24         | FOR '(' assignment_st_for_1 ';' expression_for ';' assignment_st_for_1 ')' . statement

    ID      shift, and go to state 3
    NUM     shift, and go to state 4
    INT     shift, and go to state 5
    FLOAT   shift, and go to state 6
    CHAR    shift, and go to state 7
    DOUBLE  shift, and go to state 8
    VOID    shift, and go to state 9
    AMP     shift, and go to state 10
    DM      shift, and go to state 11
    DP      shift, and go to state 12
    '+'     shift, and go to state 13
    '-'     shift, and go to state 14
    '*'     shift, and go to state 15
    '('     shift, and go to state 16
    FOR     shift, and go to state 96
    WHILE   shift, and go to state 97
    IF      shift, and go to state 98
    '{'     shift, and go to state 92

    declaration           go to state 99
    array_st_usage        go to state 18
    func_call             go to state 20
    compound_st           go to state 169
    statement             go to state 170
    for_stmt              go to state 103
    while_stmt            go to state 104
    start_if_stmt         go to state 105
    start_if_compound_st  go to state 106
    if_stmt               go to state 107
    assignment_st         go to state 21
    assignment_st_t       go to state 22
    assignment_st_f       go to state 23
    type                  go to state 108


State 169

   23 for_stmt: FOR '(' assignment_st_for_1 ';' expression_for ';' assignment_st_for_1 ')' compound_st .

    $default  reduce using rule 23 (for_stmt)


State 170

   24 for_stmt: FOR '(' assignment_st_for_1 ';' expression_for ';' assignment_st_for_1 ')' statement .

    $default  reduce using rule 24 (for_stmt)
