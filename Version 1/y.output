Terminals unused in grammar

   AND
   OR
   '<'
   '>'


Rules useless in parser due to conflicts

   39 assignment_st_f: NUM DM


State 9 conflicts: 10 reduce/reduce
State 22 conflicts: 12 reduce/reduce
State 41 conflicts: 3 reduce/reduce
State 77 conflicts: 3 reduce/reduce


Grammar

    0 $accept: init $end

    1 init: init declaration
    2     | init func_declaration
    3     | %empty

    4 declaration: type assignment_st ';'
    5            | assignment_st ';'
    6            | type array_st ';'

    7 array_st: ID '[' NUM ']'

    8 func_declaration: type ID '(' arg_list_optional ')' compound_st

    9 compound_st: '{' statement_structure '}'

   10 statement_structure: statement_structure statement
   11                    | statement

   12 statement: declaration
   13          | for_stmt

   14 expression: %empty

   15 for_stmt: FOR '(' assignment_st ';' expression ';' expression ')' statement
   16         | FOR '(' assignment_st ';' expression ';' expression ')' compound_st

   17 arg_list_optional: arg_list_actual
   18                  | %empty

   19 arg_list_actual: arg_list_actual ',' arg_final
   20                | arg_final

   21 arg_final: type ID

   22 assignment_st: ID '=' ID
   23              | ID '=' NUM
   24              | ID
   25              | assignment_st '+' assignment_st_t
   26              | assignment_st '-' assignment_st_t
   27              | assignment_st_t

   28 assignment_st_t: assignment_st_t '*' assignment_st_f
   29                | assignment_st_t '/' assignment_st_f
   30                | assignment_st_f

   31 assignment_st_f: '(' assignment_st ')'
   32                | DP ID
   33                | DM ID
   34                | DP NUM
   35                | DM NUM
   36                | ID DP
   37                | ID DM
   38                | NUM DM
   39                | NUM DM
   40                | '+' ID
   41                | '+' NUM
   42                | '-' ID
   43                | '-' NUM
   44                | '*' ID
   45                | ID
   46                | NUM

   47 type: INT
   48     | FLOAT
   49     | CHAR
   50     | DOUBLE
   51     | VOID

   52 expression: expression LE expression
   53           | expression GE expression
   54           | expression NE expression
   55           | expression EQ expression
   56           | expression GT expression
   57           | expression LT expression
   58           | assignment_st


Terminals, with rules where they appear

$end (0) 0
'(' (40) 8 15 16 31
')' (41) 8 15 16 31
'*' (42) 28 44
'+' (43) 25 40 41
',' (44) 19
'-' (45) 26 42 43
'/' (47) 29
';' (59) 4 5 6 15 16
'<' (60)
'=' (61) 22 23
'>' (62)
'[' (91) 7
']' (93) 7
'{' (123) 9
'}' (125) 9
error (256)
INT (258) 47
FLOAT (259) 48
CHAR (260) 49
DOUBLE (261) 50
VOID (262) 51
NUM (263) 7 23 34 35 38 39 41 43 46
ID (264) 7 8 21 22 23 24 32 33 36 37 40 42 44 45
FOR (265) 15 16
AND (266)
OR (267)
LE (268) 52
GE (269) 53
EQ (270) 55
NE (271) 54
LT (272) 57
GT (273) 56
DP (274) 32 34 36
DM (275) 33 35 37 38 39


Nonterminals, with rules where they appear

$accept (36)
    on left: 0
init (37)
    on left: 1 2 3, on right: 0 1 2
declaration (38)
    on left: 4 5 6, on right: 1 12
array_st (39)
    on left: 7, on right: 6
func_declaration (40)
    on left: 8, on right: 2
compound_st (41)
    on left: 9, on right: 8 16
statement_structure (42)
    on left: 10 11, on right: 9 10
statement (43)
    on left: 12 13, on right: 10 11 15
expression (44)
    on left: 14 52 53 54 55 56 57 58, on right: 15 16 52 53 54 55 56
    57
for_stmt (45)
    on left: 15 16, on right: 13
arg_list_optional (46)
    on left: 17 18, on right: 8
arg_list_actual (47)
    on left: 19 20, on right: 17 19
arg_final (48)
    on left: 21, on right: 19 20
assignment_st (49)
    on left: 22 23 24 25 26 27, on right: 4 5 15 16 25 26 31 58
assignment_st_t (50)
    on left: 28 29 30, on right: 25 26 27 28 29
assignment_st_f (51)
    on left: 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46, on right:
    28 29 30
type (52)
    on left: 47 48 49 50 51, on right: 4 6 8 21


State 0

    0 $accept: . init $end

    $default  reduce using rule 3 (init)

    init  go to state 1


State 1

    0 $accept: init . $end
    1 init: init . declaration
    2     | init . func_declaration

    $end    shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    CHAR    shift, and go to state 5
    DOUBLE  shift, and go to state 6
    VOID    shift, and go to state 7
    NUM     shift, and go to state 8
    ID      shift, and go to state 9
    DP      shift, and go to state 10
    DM      shift, and go to state 11
    '('     shift, and go to state 12
    '+'     shift, and go to state 13
    '-'     shift, and go to state 14
    '*'     shift, and go to state 15

    declaration       go to state 16
    func_declaration  go to state 17
    assignment_st     go to state 18
    assignment_st_t   go to state 19
    assignment_st_f   go to state 20
    type              go to state 21


State 2

    0 $accept: init $end .

    $default  accept


State 3

   47 type: INT .

    $default  reduce using rule 47 (type)


State 4

   48 type: FLOAT .

    $default  reduce using rule 48 (type)


State 5

   49 type: CHAR .

    $default  reduce using rule 49 (type)


State 6

   50 type: DOUBLE .

    $default  reduce using rule 50 (type)


State 7

   51 type: VOID .

    $default  reduce using rule 51 (type)


State 8

   38 assignment_st_f: NUM . DM
   39                | NUM . DM
   46                | NUM .

    DM  shift, and go to state 22

    $default  reduce using rule 46 (assignment_st_f)


State 9

   22 assignment_st: ID . '=' ID
   23              | ID . '=' NUM
   24              | ID .
   36 assignment_st_f: ID . DP
   37                | ID . DM
   45                | ID .

    '='  shift, and go to state 23
    DP   shift, and go to state 24
    DM   shift, and go to state 25

    LE        reduce using rule 24 (assignment_st)
    LE        [reduce using rule 45 (assignment_st_f)]
    GE        reduce using rule 24 (assignment_st)
    GE        [reduce using rule 45 (assignment_st_f)]
    EQ        reduce using rule 24 (assignment_st)
    EQ        [reduce using rule 45 (assignment_st_f)]
    NE        reduce using rule 24 (assignment_st)
    NE        [reduce using rule 45 (assignment_st_f)]
    LT        reduce using rule 24 (assignment_st)
    LT        [reduce using rule 45 (assignment_st_f)]
    GT        reduce using rule 24 (assignment_st)
    GT        [reduce using rule 45 (assignment_st_f)]
    ';'       reduce using rule 24 (assignment_st)
    ';'       [reduce using rule 45 (assignment_st_f)]
    ')'       reduce using rule 24 (assignment_st)
    ')'       [reduce using rule 45 (assignment_st_f)]
    '+'       reduce using rule 24 (assignment_st)
    '+'       [reduce using rule 45 (assignment_st_f)]
    '-'       reduce using rule 24 (assignment_st)
    '-'       [reduce using rule 45 (assignment_st_f)]
    '*'       reduce using rule 45 (assignment_st_f)
    '/'       reduce using rule 45 (assignment_st_f)
    $default  reduce using rule 24 (assignment_st)


State 10

   32 assignment_st_f: DP . ID
   34                | DP . NUM

    NUM  shift, and go to state 26
    ID   shift, and go to state 27


State 11

   33 assignment_st_f: DM . ID
   35                | DM . NUM

    NUM  shift, and go to state 28
    ID   shift, and go to state 29


State 12

   31 assignment_st_f: '(' . assignment_st ')'

    NUM  shift, and go to state 8
    ID   shift, and go to state 9
    DP   shift, and go to state 10
    DM   shift, and go to state 11
    '('  shift, and go to state 12
    '+'  shift, and go to state 13
    '-'  shift, and go to state 14
    '*'  shift, and go to state 15

    assignment_st    go to state 30
    assignment_st_t  go to state 19
    assignment_st_f  go to state 20


State 13

   40 assignment_st_f: '+' . ID
   41                | '+' . NUM

    NUM  shift, and go to state 31
    ID   shift, and go to state 32


State 14

   42 assignment_st_f: '-' . ID
   43                | '-' . NUM

    NUM  shift, and go to state 33
    ID   shift, and go to state 34


State 15

   44 assignment_st_f: '*' . ID

    ID  shift, and go to state 35


State 16

    1 init: init declaration .

    $default  reduce using rule 1 (init)


State 17

    2 init: init func_declaration .

    $default  reduce using rule 2 (init)


State 18

    5 declaration: assignment_st . ';'
   25 assignment_st: assignment_st . '+' assignment_st_t
   26              | assignment_st . '-' assignment_st_t

    ';'  shift, and go to state 36
    '+'  shift, and go to state 37
    '-'  shift, and go to state 38


State 19

   27 assignment_st: assignment_st_t .
   28 assignment_st_t: assignment_st_t . '*' assignment_st_f
   29                | assignment_st_t . '/' assignment_st_f

    '*'  shift, and go to state 39
    '/'  shift, and go to state 40

    $default  reduce using rule 27 (assignment_st)


State 20

   30 assignment_st_t: assignment_st_f .

    $default  reduce using rule 30 (assignment_st_t)


State 21

    4 declaration: type . assignment_st ';'
    6            | type . array_st ';'
    8 func_declaration: type . ID '(' arg_list_optional ')' compound_st

    NUM  shift, and go to state 8
    ID   shift, and go to state 41
    DP   shift, and go to state 10
    DM   shift, and go to state 11
    '('  shift, and go to state 12
    '+'  shift, and go to state 13
    '-'  shift, and go to state 14
    '*'  shift, and go to state 15

    array_st         go to state 42
    assignment_st    go to state 43
    assignment_st_t  go to state 19
    assignment_st_f  go to state 20


State 22

   38 assignment_st_f: NUM DM .
   39                | NUM DM .

    LE        reduce using rule 38 (assignment_st_f)
    LE        [reduce using rule 39 (assignment_st_f)]
    GE        reduce using rule 38 (assignment_st_f)
    GE        [reduce using rule 39 (assignment_st_f)]
    EQ        reduce using rule 38 (assignment_st_f)
    EQ        [reduce using rule 39 (assignment_st_f)]
    NE        reduce using rule 38 (assignment_st_f)
    NE        [reduce using rule 39 (assignment_st_f)]
    LT        reduce using rule 38 (assignment_st_f)
    LT        [reduce using rule 39 (assignment_st_f)]
    GT        reduce using rule 38 (assignment_st_f)
    GT        [reduce using rule 39 (assignment_st_f)]
    ';'       reduce using rule 38 (assignment_st_f)
    ';'       [reduce using rule 39 (assignment_st_f)]
    ')'       reduce using rule 38 (assignment_st_f)
    ')'       [reduce using rule 39 (assignment_st_f)]
    '+'       reduce using rule 38 (assignment_st_f)
    '+'       [reduce using rule 39 (assignment_st_f)]
    '-'       reduce using rule 38 (assignment_st_f)
    '-'       [reduce using rule 39 (assignment_st_f)]
    '*'       reduce using rule 38 (assignment_st_f)
    '*'       [reduce using rule 39 (assignment_st_f)]
    '/'       reduce using rule 38 (assignment_st_f)
    '/'       [reduce using rule 39 (assignment_st_f)]
    $default  reduce using rule 38 (assignment_st_f)


State 23

   22 assignment_st: ID '=' . ID
   23              | ID '=' . NUM

    NUM  shift, and go to state 44
    ID   shift, and go to state 45


State 24

   36 assignment_st_f: ID DP .

    $default  reduce using rule 36 (assignment_st_f)


State 25

   37 assignment_st_f: ID DM .

    $default  reduce using rule 37 (assignment_st_f)


State 26

   34 assignment_st_f: DP NUM .

    $default  reduce using rule 34 (assignment_st_f)


State 27

   32 assignment_st_f: DP ID .

    $default  reduce using rule 32 (assignment_st_f)


State 28

   35 assignment_st_f: DM NUM .

    $default  reduce using rule 35 (assignment_st_f)


State 29

   33 assignment_st_f: DM ID .

    $default  reduce using rule 33 (assignment_st_f)


State 30

   25 assignment_st: assignment_st . '+' assignment_st_t
   26              | assignment_st . '-' assignment_st_t
   31 assignment_st_f: '(' assignment_st . ')'

    ')'  shift, and go to state 46
    '+'  shift, and go to state 37
    '-'  shift, and go to state 38


State 31

   41 assignment_st_f: '+' NUM .

    $default  reduce using rule 41 (assignment_st_f)


State 32

   40 assignment_st_f: '+' ID .

    $default  reduce using rule 40 (assignment_st_f)


State 33

   43 assignment_st_f: '-' NUM .

    $default  reduce using rule 43 (assignment_st_f)


State 34

   42 assignment_st_f: '-' ID .

    $default  reduce using rule 42 (assignment_st_f)


State 35

   44 assignment_st_f: '*' ID .

    $default  reduce using rule 44 (assignment_st_f)


State 36

    5 declaration: assignment_st ';' .

    $default  reduce using rule 5 (declaration)


State 37

   25 assignment_st: assignment_st '+' . assignment_st_t

    NUM  shift, and go to state 8
    ID   shift, and go to state 47
    DP   shift, and go to state 10
    DM   shift, and go to state 11
    '('  shift, and go to state 12
    '+'  shift, and go to state 13
    '-'  shift, and go to state 14
    '*'  shift, and go to state 15

    assignment_st_t  go to state 48
    assignment_st_f  go to state 20


State 38

   26 assignment_st: assignment_st '-' . assignment_st_t

    NUM  shift, and go to state 8
    ID   shift, and go to state 47
    DP   shift, and go to state 10
    DM   shift, and go to state 11
    '('  shift, and go to state 12
    '+'  shift, and go to state 13
    '-'  shift, and go to state 14
    '*'  shift, and go to state 15

    assignment_st_t  go to state 49
    assignment_st_f  go to state 20


State 39

   28 assignment_st_t: assignment_st_t '*' . assignment_st_f

    NUM  shift, and go to state 8
    ID   shift, and go to state 47
    DP   shift, and go to state 10
    DM   shift, and go to state 11
    '('  shift, and go to state 12
    '+'  shift, and go to state 13
    '-'  shift, and go to state 14
    '*'  shift, and go to state 15

    assignment_st_f  go to state 50


State 40

   29 assignment_st_t: assignment_st_t '/' . assignment_st_f

    NUM  shift, and go to state 8
    ID   shift, and go to state 47
    DP   shift, and go to state 10
    DM   shift, and go to state 11
    '('  shift, and go to state 12
    '+'  shift, and go to state 13
    '-'  shift, and go to state 14
    '*'  shift, and go to state 15

    assignment_st_f  go to state 51


State 41

    7 array_st: ID . '[' NUM ']'
    8 func_declaration: type ID . '(' arg_list_optional ')' compound_st
   22 assignment_st: ID . '=' ID
   23              | ID . '=' NUM
   24              | ID .
   36 assignment_st_f: ID . DP
   37                | ID . DM
   45                | ID .

    '='  shift, and go to state 23
    DP   shift, and go to state 24
    DM   shift, and go to state 25
    '['  shift, and go to state 52
    '('  shift, and go to state 53

    ';'       reduce using rule 24 (assignment_st)
    ';'       [reduce using rule 45 (assignment_st_f)]
    '+'       reduce using rule 24 (assignment_st)
    '+'       [reduce using rule 45 (assignment_st_f)]
    '-'       reduce using rule 24 (assignment_st)
    '-'       [reduce using rule 45 (assignment_st_f)]
    '*'       reduce using rule 45 (assignment_st_f)
    '/'       reduce using rule 45 (assignment_st_f)
    $default  reduce using rule 24 (assignment_st)


State 42

    6 declaration: type array_st . ';'

    ';'  shift, and go to state 54


State 43

    4 declaration: type assignment_st . ';'
   25 assignment_st: assignment_st . '+' assignment_st_t
   26              | assignment_st . '-' assignment_st_t

    ';'  shift, and go to state 55
    '+'  shift, and go to state 37
    '-'  shift, and go to state 38


State 44

   23 assignment_st: ID '=' NUM .

    $default  reduce using rule 23 (assignment_st)


State 45

   22 assignment_st: ID '=' ID .

    $default  reduce using rule 22 (assignment_st)


State 46

   31 assignment_st_f: '(' assignment_st ')' .

    $default  reduce using rule 31 (assignment_st_f)


State 47

   36 assignment_st_f: ID . DP
   37                | ID . DM
   45                | ID .

    DP  shift, and go to state 24
    DM  shift, and go to state 25

    $default  reduce using rule 45 (assignment_st_f)


State 48

   25 assignment_st: assignment_st '+' assignment_st_t .
   28 assignment_st_t: assignment_st_t . '*' assignment_st_f
   29                | assignment_st_t . '/' assignment_st_f

    '*'  shift, and go to state 39
    '/'  shift, and go to state 40

    $default  reduce using rule 25 (assignment_st)


State 49

   26 assignment_st: assignment_st '-' assignment_st_t .
   28 assignment_st_t: assignment_st_t . '*' assignment_st_f
   29                | assignment_st_t . '/' assignment_st_f

    '*'  shift, and go to state 39
    '/'  shift, and go to state 40

    $default  reduce using rule 26 (assignment_st)


State 50

   28 assignment_st_t: assignment_st_t '*' assignment_st_f .

    $default  reduce using rule 28 (assignment_st_t)


State 51

   29 assignment_st_t: assignment_st_t '/' assignment_st_f .

    $default  reduce using rule 29 (assignment_st_t)


State 52

    7 array_st: ID '[' . NUM ']'

    NUM  shift, and go to state 56


State 53

    8 func_declaration: type ID '(' . arg_list_optional ')' compound_st

    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    CHAR    shift, and go to state 5
    DOUBLE  shift, and go to state 6
    VOID    shift, and go to state 7

    $default  reduce using rule 18 (arg_list_optional)

    arg_list_optional  go to state 57
    arg_list_actual    go to state 58
    arg_final          go to state 59
    type               go to state 60


State 54

    6 declaration: type array_st ';' .

    $default  reduce using rule 6 (declaration)


State 55

    4 declaration: type assignment_st ';' .

    $default  reduce using rule 4 (declaration)


State 56

    7 array_st: ID '[' NUM . ']'

    ']'  shift, and go to state 61


State 57

    8 func_declaration: type ID '(' arg_list_optional . ')' compound_st

    ')'  shift, and go to state 62


State 58

   17 arg_list_optional: arg_list_actual .
   19 arg_list_actual: arg_list_actual . ',' arg_final

    ','  shift, and go to state 63

    $default  reduce using rule 17 (arg_list_optional)


State 59

   20 arg_list_actual: arg_final .

    $default  reduce using rule 20 (arg_list_actual)


State 60

   21 arg_final: type . ID

    ID  shift, and go to state 64


State 61

    7 array_st: ID '[' NUM ']' .

    $default  reduce using rule 7 (array_st)


State 62

    8 func_declaration: type ID '(' arg_list_optional ')' . compound_st

    '{'  shift, and go to state 65

    compound_st  go to state 66


State 63

   19 arg_list_actual: arg_list_actual ',' . arg_final

    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    CHAR    shift, and go to state 5
    DOUBLE  shift, and go to state 6
    VOID    shift, and go to state 7

    arg_final  go to state 67
    type       go to state 60


State 64

   21 arg_final: type ID .

    $default  reduce using rule 21 (arg_final)


State 65

    9 compound_st: '{' . statement_structure '}'

    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    CHAR    shift, and go to state 5
    DOUBLE  shift, and go to state 6
    VOID    shift, and go to state 7
    NUM     shift, and go to state 8
    ID      shift, and go to state 9
    FOR     shift, and go to state 68
    DP      shift, and go to state 10
    DM      shift, and go to state 11
    '('     shift, and go to state 12
    '+'     shift, and go to state 13
    '-'     shift, and go to state 14
    '*'     shift, and go to state 15

    declaration          go to state 69
    statement_structure  go to state 70
    statement            go to state 71
    for_stmt             go to state 72
    assignment_st        go to state 18
    assignment_st_t      go to state 19
    assignment_st_f      go to state 20
    type                 go to state 73


State 66

    8 func_declaration: type ID '(' arg_list_optional ')' compound_st .

    $default  reduce using rule 8 (func_declaration)


State 67

   19 arg_list_actual: arg_list_actual ',' arg_final .

    $default  reduce using rule 19 (arg_list_actual)


State 68

   15 for_stmt: FOR . '(' assignment_st ';' expression ';' expression ')' statement
   16         | FOR . '(' assignment_st ';' expression ';' expression ')' compound_st

    '('  shift, and go to state 74


State 69

   12 statement: declaration .

    $default  reduce using rule 12 (statement)


State 70

    9 compound_st: '{' statement_structure . '}'
   10 statement_structure: statement_structure . statement

    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    CHAR    shift, and go to state 5
    DOUBLE  shift, and go to state 6
    VOID    shift, and go to state 7
    NUM     shift, and go to state 8
    ID      shift, and go to state 9
    FOR     shift, and go to state 68
    DP      shift, and go to state 10
    DM      shift, and go to state 11
    '('     shift, and go to state 12
    '}'     shift, and go to state 75
    '+'     shift, and go to state 13
    '-'     shift, and go to state 14
    '*'     shift, and go to state 15

    declaration      go to state 69
    statement        go to state 76
    for_stmt         go to state 72
    assignment_st    go to state 18
    assignment_st_t  go to state 19
    assignment_st_f  go to state 20
    type             go to state 73


State 71

   11 statement_structure: statement .

    $default  reduce using rule 11 (statement_structure)


State 72

   13 statement: for_stmt .

    $default  reduce using rule 13 (statement)


State 73

    4 declaration: type . assignment_st ';'
    6            | type . array_st ';'

    NUM  shift, and go to state 8
    ID   shift, and go to state 77
    DP   shift, and go to state 10
    DM   shift, and go to state 11
    '('  shift, and go to state 12
    '+'  shift, and go to state 13
    '-'  shift, and go to state 14
    '*'  shift, and go to state 15

    array_st         go to state 42
    assignment_st    go to state 43
    assignment_st_t  go to state 19
    assignment_st_f  go to state 20


State 74

   15 for_stmt: FOR '(' . assignment_st ';' expression ';' expression ')' statement
   16         | FOR '(' . assignment_st ';' expression ';' expression ')' compound_st

    NUM  shift, and go to state 8
    ID   shift, and go to state 9
    DP   shift, and go to state 10
    DM   shift, and go to state 11
    '('  shift, and go to state 12
    '+'  shift, and go to state 13
    '-'  shift, and go to state 14
    '*'  shift, and go to state 15

    assignment_st    go to state 78
    assignment_st_t  go to state 19
    assignment_st_f  go to state 20


State 75

    9 compound_st: '{' statement_structure '}' .

    $default  reduce using rule 9 (compound_st)


State 76

   10 statement_structure: statement_structure statement .

    $default  reduce using rule 10 (statement_structure)


State 77

    7 array_st: ID . '[' NUM ']'
   22 assignment_st: ID . '=' ID
   23              | ID . '=' NUM
   24              | ID .
   36 assignment_st_f: ID . DP
   37                | ID . DM
   45                | ID .

    '='  shift, and go to state 23
    DP   shift, and go to state 24
    DM   shift, and go to state 25
    '['  shift, and go to state 52

    ';'       reduce using rule 24 (assignment_st)
    ';'       [reduce using rule 45 (assignment_st_f)]
    '+'       reduce using rule 24 (assignment_st)
    '+'       [reduce using rule 45 (assignment_st_f)]
    '-'       reduce using rule 24 (assignment_st)
    '-'       [reduce using rule 45 (assignment_st_f)]
    '*'       reduce using rule 45 (assignment_st_f)
    '/'       reduce using rule 45 (assignment_st_f)
    $default  reduce using rule 24 (assignment_st)


State 78

   15 for_stmt: FOR '(' assignment_st . ';' expression ';' expression ')' statement
   16         | FOR '(' assignment_st . ';' expression ';' expression ')' compound_st
   25 assignment_st: assignment_st . '+' assignment_st_t
   26              | assignment_st . '-' assignment_st_t

    ';'  shift, and go to state 79
    '+'  shift, and go to state 37
    '-'  shift, and go to state 38


State 79

   15 for_stmt: FOR '(' assignment_st ';' . expression ';' expression ')' statement
   16         | FOR '(' assignment_st ';' . expression ';' expression ')' compound_st

    NUM  shift, and go to state 8
    ID   shift, and go to state 9
    DP   shift, and go to state 10
    DM   shift, and go to state 11
    '('  shift, and go to state 12
    '+'  shift, and go to state 13
    '-'  shift, and go to state 14
    '*'  shift, and go to state 15

    $default  reduce using rule 14 (expression)

    expression       go to state 80
    assignment_st    go to state 81
    assignment_st_t  go to state 19
    assignment_st_f  go to state 20


State 80

   15 for_stmt: FOR '(' assignment_st ';' expression . ';' expression ')' statement
   16         | FOR '(' assignment_st ';' expression . ';' expression ')' compound_st
   52 expression: expression . LE expression
   53           | expression . GE expression
   54           | expression . NE expression
   55           | expression . EQ expression
   56           | expression . GT expression
   57           | expression . LT expression

    LE   shift, and go to state 82
    GE   shift, and go to state 83
    EQ   shift, and go to state 84
    NE   shift, and go to state 85
    LT   shift, and go to state 86
    GT   shift, and go to state 87
    ';'  shift, and go to state 88


State 81

   25 assignment_st: assignment_st . '+' assignment_st_t
   26              | assignment_st . '-' assignment_st_t
   58 expression: assignment_st .

    '+'  shift, and go to state 37
    '-'  shift, and go to state 38

    $default  reduce using rule 58 (expression)


State 82

   52 expression: expression LE . expression

    NUM  shift, and go to state 8
    ID   shift, and go to state 9
    DP   shift, and go to state 10
    DM   shift, and go to state 11
    '('  shift, and go to state 12
    '+'  shift, and go to state 13
    '-'  shift, and go to state 14
    '*'  shift, and go to state 15

    $default  reduce using rule 14 (expression)

    expression       go to state 89
    assignment_st    go to state 81
    assignment_st_t  go to state 19
    assignment_st_f  go to state 20


State 83

   53 expression: expression GE . expression

    NUM  shift, and go to state 8
    ID   shift, and go to state 9
    DP   shift, and go to state 10
    DM   shift, and go to state 11
    '('  shift, and go to state 12
    '+'  shift, and go to state 13
    '-'  shift, and go to state 14
    '*'  shift, and go to state 15

    $default  reduce using rule 14 (expression)

    expression       go to state 90
    assignment_st    go to state 81
    assignment_st_t  go to state 19
    assignment_st_f  go to state 20


State 84

   55 expression: expression EQ . expression

    NUM  shift, and go to state 8
    ID   shift, and go to state 9
    DP   shift, and go to state 10
    DM   shift, and go to state 11
    '('  shift, and go to state 12
    '+'  shift, and go to state 13
    '-'  shift, and go to state 14
    '*'  shift, and go to state 15

    $default  reduce using rule 14 (expression)

    expression       go to state 91
    assignment_st    go to state 81
    assignment_st_t  go to state 19
    assignment_st_f  go to state 20


State 85

   54 expression: expression NE . expression

    NUM  shift, and go to state 8
    ID   shift, and go to state 9
    DP   shift, and go to state 10
    DM   shift, and go to state 11
    '('  shift, and go to state 12
    '+'  shift, and go to state 13
    '-'  shift, and go to state 14
    '*'  shift, and go to state 15

    $default  reduce using rule 14 (expression)

    expression       go to state 92
    assignment_st    go to state 81
    assignment_st_t  go to state 19
    assignment_st_f  go to state 20


State 86

   57 expression: expression LT . expression

    NUM  shift, and go to state 8
    ID   shift, and go to state 9
    DP   shift, and go to state 10
    DM   shift, and go to state 11
    '('  shift, and go to state 12
    '+'  shift, and go to state 13
    '-'  shift, and go to state 14
    '*'  shift, and go to state 15

    $default  reduce using rule 14 (expression)

    expression       go to state 93
    assignment_st    go to state 81
    assignment_st_t  go to state 19
    assignment_st_f  go to state 20


State 87

   56 expression: expression GT . expression

    NUM  shift, and go to state 8
    ID   shift, and go to state 9
    DP   shift, and go to state 10
    DM   shift, and go to state 11
    '('  shift, and go to state 12
    '+'  shift, and go to state 13
    '-'  shift, and go to state 14
    '*'  shift, and go to state 15

    $default  reduce using rule 14 (expression)

    expression       go to state 94
    assignment_st    go to state 81
    assignment_st_t  go to state 19
    assignment_st_f  go to state 20


State 88

   15 for_stmt: FOR '(' assignment_st ';' expression ';' . expression ')' statement
   16         | FOR '(' assignment_st ';' expression ';' . expression ')' compound_st

    NUM  shift, and go to state 8
    ID   shift, and go to state 9
    DP   shift, and go to state 10
    DM   shift, and go to state 11
    '('  shift, and go to state 12
    '+'  shift, and go to state 13
    '-'  shift, and go to state 14
    '*'  shift, and go to state 15

    $default  reduce using rule 14 (expression)

    expression       go to state 95
    assignment_st    go to state 81
    assignment_st_t  go to state 19
    assignment_st_f  go to state 20


State 89

   52 expression: expression . LE expression
   52           | expression LE expression .
   53           | expression . GE expression
   54           | expression . NE expression
   55           | expression . EQ expression
   56           | expression . GT expression
   57           | expression . LT expression

    $default  reduce using rule 52 (expression)


State 90

   52 expression: expression . LE expression
   53           | expression . GE expression
   53           | expression GE expression .
   54           | expression . NE expression
   55           | expression . EQ expression
   56           | expression . GT expression
   57           | expression . LT expression

    $default  reduce using rule 53 (expression)


State 91

   52 expression: expression . LE expression
   53           | expression . GE expression
   54           | expression . NE expression
   55           | expression . EQ expression
   55           | expression EQ expression .
   56           | expression . GT expression
   57           | expression . LT expression

    $default  reduce using rule 55 (expression)


State 92

   52 expression: expression . LE expression
   53           | expression . GE expression
   54           | expression . NE expression
   54           | expression NE expression .
   55           | expression . EQ expression
   56           | expression . GT expression
   57           | expression . LT expression

    $default  reduce using rule 54 (expression)


State 93

   52 expression: expression . LE expression
   53           | expression . GE expression
   54           | expression . NE expression
   55           | expression . EQ expression
   56           | expression . GT expression
   57           | expression . LT expression
   57           | expression LT expression .

    $default  reduce using rule 57 (expression)


State 94

   52 expression: expression . LE expression
   53           | expression . GE expression
   54           | expression . NE expression
   55           | expression . EQ expression
   56           | expression . GT expression
   56           | expression GT expression .
   57           | expression . LT expression

    $default  reduce using rule 56 (expression)


State 95

   15 for_stmt: FOR '(' assignment_st ';' expression ';' expression . ')' statement
   16         | FOR '(' assignment_st ';' expression ';' expression . ')' compound_st
   52 expression: expression . LE expression
   53           | expression . GE expression
   54           | expression . NE expression
   55           | expression . EQ expression
   56           | expression . GT expression
   57           | expression . LT expression

    LE   shift, and go to state 82
    GE   shift, and go to state 83
    EQ   shift, and go to state 84
    NE   shift, and go to state 85
    LT   shift, and go to state 86
    GT   shift, and go to state 87
    ')'  shift, and go to state 96


State 96

   15 for_stmt: FOR '(' assignment_st ';' expression ';' expression ')' . statement
   16         | FOR '(' assignment_st ';' expression ';' expression ')' . compound_st

    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    CHAR    shift, and go to state 5
    DOUBLE  shift, and go to state 6
    VOID    shift, and go to state 7
    NUM     shift, and go to state 8
    ID      shift, and go to state 9
    FOR     shift, and go to state 68
    DP      shift, and go to state 10
    DM      shift, and go to state 11
    '('     shift, and go to state 12
    '{'     shift, and go to state 65
    '+'     shift, and go to state 13
    '-'     shift, and go to state 14
    '*'     shift, and go to state 15

    declaration      go to state 69
    compound_st      go to state 97
    statement        go to state 98
    for_stmt         go to state 72
    assignment_st    go to state 18
    assignment_st_t  go to state 19
    assignment_st_f  go to state 20
    type             go to state 73


State 97

   16 for_stmt: FOR '(' assignment_st ';' expression ';' expression ')' compound_st .

    $default  reduce using rule 16 (for_stmt)


State 98

   15 for_stmt: FOR '(' assignment_st ';' expression ';' expression ')' statement .

    $default  reduce using rule 15 (for_stmt)
