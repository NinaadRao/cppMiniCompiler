Terminals unused in grammar

   AND
   OR


State 22 conflicts: 3 shift/reduce
State 42 conflicts: 8 reduce/reduce
State 69 conflicts: 1 reduce/reduce
State 87 conflicts: 1 reduce/reduce
State 99 conflicts: 1 shift/reduce
State 100 conflicts: 1 shift/reduce


Grammar

    0 $accept: init $end

    1 init: init declaration
    2     | init func_declaration
    3     | %empty

    4 declaration: type assignment_st ';'
    5            | assignment_st ';'
    6            | type array_st ';'

    7 array_st: ID '[' NUM ']'

    8 array_st_usage: ID '[' NUM ']'

    9 func_declaration: type ID '(' arg_list_optional ')' compound_st

   10 func_call: ID '(' arg_list_call ')' ';'

   11 compound_st: '{' statement_structure '}'

   12 statement_structure: statement_structure statement
   13                    | statement

   14 statement: declaration
   15          | while_stmt
   16          | for_stmt
   17          | if_stmt

   18 for_stmt: FOR '(' assignment_st_for ';' expression_for ';' assignment_st_for ')' statement
   19         | FOR '(' assignment_st_for ';' expression_for ';' assignment_st_for ')' compound_st

   20 while_stmt: WHILE '(' expression ')' statement
   21           | WHILE '(' expression ')' compound_st

   22 start_if_stmt: IF '(' expression ')' statement

   23 start_if_compound_st: IF '(' expression ')' compound_st

   24 if_stmt: start_if_stmt
   25        | start_if_compound_st
   26        | start_if_stmt ELSE statement
   27        | start_if_stmt ELSE compound_st
   28        | start_if_compound_st ELSE statement
   29        | start_if_compound_st ELSE compound_st

   30 arg_list_optional: arg_list_actual
   31                  | %empty

   32 arg_list_call: arg_list_call_actual
   33              | %empty

   34 arg_list_call_actual: arg_list_call_actual ',' ID
   35                     | ID

   36 arg_list_actual: arg_list_actual ',' arg_final
   37                | arg_final

   38 arg_final: type ID

   39 assignment_st_for: %empty
   40                  | assignment_st

   41 assignment_st: ID '=' assignment_st
   42              | assignment_st ',' assignment_st
   43              | assignment_st '+' assignment_st_t
   44              | assignment_st '-' assignment_st_t
   45              | assignment_st_t

   46 assignment_st_t: assignment_st_t '*' assignment_st_f
   47                | assignment_st_t '/' assignment_st_f
   48                | assignment_st_t '%' assignment_st_f
   49                | assignment_st_f

   50 assignment_st_f: '(' assignment_st ')'
   51                | '-' '(' assignment_st ')'
   52                | DM ID
   53                | DP ID
   54                | DP NUM
   55                | DM NUM
   56                | ID DP
   57                | ID DM
   58                | NUM DP
   59                | NUM DM
   60                | '+' NUM
   61                | '-' NUM
   62                | '+' ID
   63                | '-' ID
   64                | '*' ID
   65                | AMP ID
   66                | ID
   67                | NUM
   68                | '*' assignment_st
   69                | array_st_usage
   70                | func_call

   71 type: INT
   72     | FLOAT
   73     | CHAR
   74     | DOUBLE
   75     | VOID

   76 expression_for: %empty
   77               | expression

   78 expression: expression LE expression
   79           | expression GE expression
   80           | expression NE expression
   81           | expression EQ expression
   82           | expression GT expression
   83           | expression LT expression
   84           | ID
   85           | NUM


Terminals, with rules where they appear

$end (0) 0
'%' (37) 48
'(' (40) 9 10 18 19 20 21 22 23 50 51
')' (41) 9 10 18 19 20 21 22 23 50 51
'*' (42) 46 64 68
'+' (43) 43 60 62
',' (44) 34 36 42
'-' (45) 44 51 61 63
'/' (47) 47
';' (59) 4 5 6 10 18 19
'=' (61) 41
'[' (91) 7 8
']' (93) 7 8
'{' (123) 11
'}' (125) 11
error (256)
ID (258) 7 8 9 10 34 35 38 41 52 53 56 57 62 63 64 65 66 84
NUM (259) 7 8 54 55 58 59 60 61 67 85
INT (260) 71
FLOAT (261) 72
CHAR (262) 73
DOUBLE (263) 74
VOID (264) 75
AMP (265) 65
DM (266) 52 55 57 59
DP (267) 53 54 56 58
FOR (268) 18 19
WHILE (269) 20 21
IF (270) 22 23
ELSE (271) 26 27 28 29
AND (272)
OR (273)
LE (274) 78
GE (275) 79
EQ (276) 81
NE (277) 80
LT (278) 83
GT (279) 82


Nonterminals, with rules where they appear

$accept (39)
    on left: 0
init (40)
    on left: 1 2 3, on right: 0 1 2
declaration (41)
    on left: 4 5 6, on right: 1 14
array_st (42)
    on left: 7, on right: 6
array_st_usage (43)
    on left: 8, on right: 69
func_declaration (44)
    on left: 9, on right: 2
func_call (45)
    on left: 10, on right: 70
compound_st (46)
    on left: 11, on right: 9 19 21 23 27 29
statement_structure (47)
    on left: 12 13, on right: 11 12
statement (48)
    on left: 14 15 16 17, on right: 12 13 18 20 22 26 28
for_stmt (49)
    on left: 18 19, on right: 16
while_stmt (50)
    on left: 20 21, on right: 15
start_if_stmt (51)
    on left: 22, on right: 24 26 27
start_if_compound_st (52)
    on left: 23, on right: 25 28 29
if_stmt (53)
    on left: 24 25 26 27 28 29, on right: 17
arg_list_optional (54)
    on left: 30 31, on right: 9
arg_list_call (55)
    on left: 32 33, on right: 10
arg_list_call_actual (56)
    on left: 34 35, on right: 32 34
arg_list_actual (57)
    on left: 36 37, on right: 30 36
arg_final (58)
    on left: 38, on right: 36 37
assignment_st_for (59)
    on left: 39 40, on right: 18 19
assignment_st (60)
    on left: 41 42 43 44 45, on right: 4 5 40 41 42 43 44 50 51 68
assignment_st_t (61)
    on left: 46 47 48 49, on right: 43 44 45 46 47 48
assignment_st_f (62)
    on left: 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67
    68 69 70, on right: 46 47 48 49
type (63)
    on left: 71 72 73 74 75, on right: 4 6 9 38
expression_for (64)
    on left: 76 77, on right: 18 19
expression (65)
    on left: 78 79 80 81 82 83 84 85, on right: 20 21 22 23 77 78 79
    80 81 82 83


State 0

    0 $accept: . init $end

    $default  reduce using rule 3 (init)

    init  go to state 1


State 1

    0 $accept: init . $end
    1 init: init . declaration
    2     | init . func_declaration

    $end    shift, and go to state 2
    ID      shift, and go to state 3
    NUM     shift, and go to state 4
    INT     shift, and go to state 5
    FLOAT   shift, and go to state 6
    CHAR    shift, and go to state 7
    DOUBLE  shift, and go to state 8
    VOID    shift, and go to state 9
    AMP     shift, and go to state 10
    DM      shift, and go to state 11
    DP      shift, and go to state 12
    '+'     shift, and go to state 13
    '-'     shift, and go to state 14
    '*'     shift, and go to state 15
    '('     shift, and go to state 16

    declaration       go to state 17
    array_st_usage    go to state 18
    func_declaration  go to state 19
    func_call         go to state 20
    assignment_st     go to state 21
    assignment_st_t   go to state 22
    assignment_st_f   go to state 23
    type              go to state 24


State 2

    0 $accept: init $end .

    $default  accept


State 3

    8 array_st_usage: ID . '[' NUM ']'
   10 func_call: ID . '(' arg_list_call ')' ';'
   41 assignment_st: ID . '=' assignment_st
   56 assignment_st_f: ID . DP
   57                | ID . DM
   66                | ID .

    DM   shift, and go to state 25
    DP   shift, and go to state 26
    '('  shift, and go to state 27
    '['  shift, and go to state 28
    '='  shift, and go to state 29

    $default  reduce using rule 66 (assignment_st_f)


State 4

   58 assignment_st_f: NUM . DP
   59                | NUM . DM
   67                | NUM .

    DM  shift, and go to state 30
    DP  shift, and go to state 31

    $default  reduce using rule 67 (assignment_st_f)


State 5

   71 type: INT .

    $default  reduce using rule 71 (type)


State 6

   72 type: FLOAT .

    $default  reduce using rule 72 (type)


State 7

   73 type: CHAR .

    $default  reduce using rule 73 (type)


State 8

   74 type: DOUBLE .

    $default  reduce using rule 74 (type)


State 9

   75 type: VOID .

    $default  reduce using rule 75 (type)


State 10

   65 assignment_st_f: AMP . ID

    ID  shift, and go to state 32


State 11

   52 assignment_st_f: DM . ID
   55                | DM . NUM

    ID   shift, and go to state 33
    NUM  shift, and go to state 34


State 12

   53 assignment_st_f: DP . ID
   54                | DP . NUM

    ID   shift, and go to state 35
    NUM  shift, and go to state 36


State 13

   60 assignment_st_f: '+' . NUM
   62                | '+' . ID

    ID   shift, and go to state 37
    NUM  shift, and go to state 38


State 14

   51 assignment_st_f: '-' . '(' assignment_st ')'
   61                | '-' . NUM
   63                | '-' . ID

    ID   shift, and go to state 39
    NUM  shift, and go to state 40
    '('  shift, and go to state 41


State 15

   64 assignment_st_f: '*' . ID
   68                | '*' . assignment_st

    ID   shift, and go to state 42
    NUM  shift, and go to state 4
    AMP  shift, and go to state 10
    DM   shift, and go to state 11
    DP   shift, and go to state 12
    '+'  shift, and go to state 13
    '-'  shift, and go to state 14
    '*'  shift, and go to state 15
    '('  shift, and go to state 16

    array_st_usage   go to state 18
    func_call        go to state 20
    assignment_st    go to state 43
    assignment_st_t  go to state 22
    assignment_st_f  go to state 23


State 16

   50 assignment_st_f: '(' . assignment_st ')'

    ID   shift, and go to state 3
    NUM  shift, and go to state 4
    AMP  shift, and go to state 10
    DM   shift, and go to state 11
    DP   shift, and go to state 12
    '+'  shift, and go to state 13
    '-'  shift, and go to state 14
    '*'  shift, and go to state 15
    '('  shift, and go to state 16

    array_st_usage   go to state 18
    func_call        go to state 20
    assignment_st    go to state 44
    assignment_st_t  go to state 22
    assignment_st_f  go to state 23


State 17

    1 init: init declaration .

    $default  reduce using rule 1 (init)


State 18

   69 assignment_st_f: array_st_usage .

    $default  reduce using rule 69 (assignment_st_f)


State 19

    2 init: init func_declaration .

    $default  reduce using rule 2 (init)


State 20

   70 assignment_st_f: func_call .

    $default  reduce using rule 70 (assignment_st_f)


State 21

    5 declaration: assignment_st . ';'
   42 assignment_st: assignment_st . ',' assignment_st
   43              | assignment_st . '+' assignment_st_t
   44              | assignment_st . '-' assignment_st_t

    '+'  shift, and go to state 45
    '-'  shift, and go to state 46
    ','  shift, and go to state 47
    ';'  shift, and go to state 48


State 22

   45 assignment_st: assignment_st_t .
   46 assignment_st_t: assignment_st_t . '*' assignment_st_f
   47                | assignment_st_t . '/' assignment_st_f
   48                | assignment_st_t . '%' assignment_st_f

    '*'  shift, and go to state 49
    '/'  shift, and go to state 50
    '%'  shift, and go to state 51

    '*'       [reduce using rule 45 (assignment_st)]
    '/'       [reduce using rule 45 (assignment_st)]
    '%'       [reduce using rule 45 (assignment_st)]
    $default  reduce using rule 45 (assignment_st)


State 23

   49 assignment_st_t: assignment_st_f .

    $default  reduce using rule 49 (assignment_st_t)


State 24

    4 declaration: type . assignment_st ';'
    6            | type . array_st ';'
    9 func_declaration: type . ID '(' arg_list_optional ')' compound_st

    ID   shift, and go to state 52
    NUM  shift, and go to state 4
    AMP  shift, and go to state 10
    DM   shift, and go to state 11
    DP   shift, and go to state 12
    '+'  shift, and go to state 13
    '-'  shift, and go to state 14
    '*'  shift, and go to state 15
    '('  shift, and go to state 16

    array_st         go to state 53
    array_st_usage   go to state 18
    func_call        go to state 20
    assignment_st    go to state 54
    assignment_st_t  go to state 22
    assignment_st_f  go to state 23


State 25

   57 assignment_st_f: ID DM .

    $default  reduce using rule 57 (assignment_st_f)


State 26

   56 assignment_st_f: ID DP .

    $default  reduce using rule 56 (assignment_st_f)


State 27

   10 func_call: ID '(' . arg_list_call ')' ';'

    ID  shift, and go to state 55

    $default  reduce using rule 33 (arg_list_call)

    arg_list_call         go to state 56
    arg_list_call_actual  go to state 57


State 28

    8 array_st_usage: ID '[' . NUM ']'

    NUM  shift, and go to state 58


State 29

   41 assignment_st: ID '=' . assignment_st

    ID   shift, and go to state 3
    NUM  shift, and go to state 4
    AMP  shift, and go to state 10
    DM   shift, and go to state 11
    DP   shift, and go to state 12
    '+'  shift, and go to state 13
    '-'  shift, and go to state 14
    '*'  shift, and go to state 15
    '('  shift, and go to state 16

    array_st_usage   go to state 18
    func_call        go to state 20
    assignment_st    go to state 59
    assignment_st_t  go to state 22
    assignment_st_f  go to state 23


State 30

   59 assignment_st_f: NUM DM .

    $default  reduce using rule 59 (assignment_st_f)


State 31

   58 assignment_st_f: NUM DP .

    $default  reduce using rule 58 (assignment_st_f)


State 32

   65 assignment_st_f: AMP ID .

    $default  reduce using rule 65 (assignment_st_f)


State 33

   52 assignment_st_f: DM ID .

    $default  reduce using rule 52 (assignment_st_f)


State 34

   55 assignment_st_f: DM NUM .

    $default  reduce using rule 55 (assignment_st_f)


State 35

   53 assignment_st_f: DP ID .

    $default  reduce using rule 53 (assignment_st_f)


State 36

   54 assignment_st_f: DP NUM .

    $default  reduce using rule 54 (assignment_st_f)


State 37

   62 assignment_st_f: '+' ID .

    $default  reduce using rule 62 (assignment_st_f)


State 38

   60 assignment_st_f: '+' NUM .

    $default  reduce using rule 60 (assignment_st_f)


State 39

   63 assignment_st_f: '-' ID .

    $default  reduce using rule 63 (assignment_st_f)


State 40

   61 assignment_st_f: '-' NUM .

    $default  reduce using rule 61 (assignment_st_f)


State 41

   51 assignment_st_f: '-' '(' . assignment_st ')'

    ID   shift, and go to state 3
    NUM  shift, and go to state 4
    AMP  shift, and go to state 10
    DM   shift, and go to state 11
    DP   shift, and go to state 12
    '+'  shift, and go to state 13
    '-'  shift, and go to state 14
    '*'  shift, and go to state 15
    '('  shift, and go to state 16

    array_st_usage   go to state 18
    func_call        go to state 20
    assignment_st    go to state 60
    assignment_st_t  go to state 22
    assignment_st_f  go to state 23


State 42

    8 array_st_usage: ID . '[' NUM ']'
   10 func_call: ID . '(' arg_list_call ')' ';'
   41 assignment_st: ID . '=' assignment_st
   56 assignment_st_f: ID . DP
   57                | ID . DM
   64                | '*' ID .
   66                | ID .

    DM   shift, and go to state 25
    DP   shift, and go to state 26
    '('  shift, and go to state 27
    '['  shift, and go to state 28
    '='  shift, and go to state 29

    '+'       reduce using rule 64 (assignment_st_f)
    '+'       [reduce using rule 66 (assignment_st_f)]
    '-'       reduce using rule 64 (assignment_st_f)
    '-'       [reduce using rule 66 (assignment_st_f)]
    '*'       reduce using rule 64 (assignment_st_f)
    '*'       [reduce using rule 66 (assignment_st_f)]
    ')'       reduce using rule 64 (assignment_st_f)
    ')'       [reduce using rule 66 (assignment_st_f)]
    ','       reduce using rule 64 (assignment_st_f)
    ','       [reduce using rule 66 (assignment_st_f)]
    '/'       reduce using rule 64 (assignment_st_f)
    '/'       [reduce using rule 66 (assignment_st_f)]
    '%'       reduce using rule 64 (assignment_st_f)
    '%'       [reduce using rule 66 (assignment_st_f)]
    ';'       reduce using rule 64 (assignment_st_f)
    ';'       [reduce using rule 66 (assignment_st_f)]
    $default  reduce using rule 64 (assignment_st_f)


State 43

   42 assignment_st: assignment_st . ',' assignment_st
   43              | assignment_st . '+' assignment_st_t
   44              | assignment_st . '-' assignment_st_t
   68 assignment_st_f: '*' assignment_st .

    $default  reduce using rule 68 (assignment_st_f)


State 44

   42 assignment_st: assignment_st . ',' assignment_st
   43              | assignment_st . '+' assignment_st_t
   44              | assignment_st . '-' assignment_st_t
   50 assignment_st_f: '(' assignment_st . ')'

    '+'  shift, and go to state 45
    '-'  shift, and go to state 46
    ')'  shift, and go to state 61
    ','  shift, and go to state 47


State 45

   43 assignment_st: assignment_st '+' . assignment_st_t

    ID   shift, and go to state 62
    NUM  shift, and go to state 4
    AMP  shift, and go to state 10
    DM   shift, and go to state 11
    DP   shift, and go to state 12
    '+'  shift, and go to state 13
    '-'  shift, and go to state 14
    '*'  shift, and go to state 15
    '('  shift, and go to state 16

    array_st_usage   go to state 18
    func_call        go to state 20
    assignment_st_t  go to state 63
    assignment_st_f  go to state 23


State 46

   44 assignment_st: assignment_st '-' . assignment_st_t

    ID   shift, and go to state 62
    NUM  shift, and go to state 4
    AMP  shift, and go to state 10
    DM   shift, and go to state 11
    DP   shift, and go to state 12
    '+'  shift, and go to state 13
    '-'  shift, and go to state 14
    '*'  shift, and go to state 15
    '('  shift, and go to state 16

    array_st_usage   go to state 18
    func_call        go to state 20
    assignment_st_t  go to state 64
    assignment_st_f  go to state 23


State 47

   42 assignment_st: assignment_st ',' . assignment_st

    ID   shift, and go to state 3
    NUM  shift, and go to state 4
    AMP  shift, and go to state 10
    DM   shift, and go to state 11
    DP   shift, and go to state 12
    '+'  shift, and go to state 13
    '-'  shift, and go to state 14
    '*'  shift, and go to state 15
    '('  shift, and go to state 16

    array_st_usage   go to state 18
    func_call        go to state 20
    assignment_st    go to state 65
    assignment_st_t  go to state 22
    assignment_st_f  go to state 23


State 48

    5 declaration: assignment_st ';' .

    $default  reduce using rule 5 (declaration)


State 49

   46 assignment_st_t: assignment_st_t '*' . assignment_st_f

    ID   shift, and go to state 62
    NUM  shift, and go to state 4
    AMP  shift, and go to state 10
    DM   shift, and go to state 11
    DP   shift, and go to state 12
    '+'  shift, and go to state 13
    '-'  shift, and go to state 14
    '*'  shift, and go to state 15
    '('  shift, and go to state 16

    array_st_usage   go to state 18
    func_call        go to state 20
    assignment_st_f  go to state 66


State 50

   47 assignment_st_t: assignment_st_t '/' . assignment_st_f

    ID   shift, and go to state 62
    NUM  shift, and go to state 4
    AMP  shift, and go to state 10
    DM   shift, and go to state 11
    DP   shift, and go to state 12
    '+'  shift, and go to state 13
    '-'  shift, and go to state 14
    '*'  shift, and go to state 15
    '('  shift, and go to state 16

    array_st_usage   go to state 18
    func_call        go to state 20
    assignment_st_f  go to state 67


State 51

   48 assignment_st_t: assignment_st_t '%' . assignment_st_f

    ID   shift, and go to state 62
    NUM  shift, and go to state 4
    AMP  shift, and go to state 10
    DM   shift, and go to state 11
    DP   shift, and go to state 12
    '+'  shift, and go to state 13
    '-'  shift, and go to state 14
    '*'  shift, and go to state 15
    '('  shift, and go to state 16

    array_st_usage   go to state 18
    func_call        go to state 20
    assignment_st_f  go to state 68


State 52

    7 array_st: ID . '[' NUM ']'
    8 array_st_usage: ID . '[' NUM ']'
    9 func_declaration: type ID . '(' arg_list_optional ')' compound_st
   10 func_call: ID . '(' arg_list_call ')' ';'
   41 assignment_st: ID . '=' assignment_st
   56 assignment_st_f: ID . DP
   57                | ID . DM
   66                | ID .

    DM   shift, and go to state 25
    DP   shift, and go to state 26
    '('  shift, and go to state 69
    '['  shift, and go to state 70
    '='  shift, and go to state 29

    $default  reduce using rule 66 (assignment_st_f)


State 53

    6 declaration: type array_st . ';'

    ';'  shift, and go to state 71


State 54

    4 declaration: type assignment_st . ';'
   42 assignment_st: assignment_st . ',' assignment_st
   43              | assignment_st . '+' assignment_st_t
   44              | assignment_st . '-' assignment_st_t

    '+'  shift, and go to state 45
    '-'  shift, and go to state 46
    ','  shift, and go to state 47
    ';'  shift, and go to state 72


State 55

   35 arg_list_call_actual: ID .

    $default  reduce using rule 35 (arg_list_call_actual)


State 56

   10 func_call: ID '(' arg_list_call . ')' ';'

    ')'  shift, and go to state 73


State 57

   32 arg_list_call: arg_list_call_actual .
   34 arg_list_call_actual: arg_list_call_actual . ',' ID

    ','  shift, and go to state 74

    $default  reduce using rule 32 (arg_list_call)


State 58

    8 array_st_usage: ID '[' NUM . ']'

    ']'  shift, and go to state 75


State 59

   41 assignment_st: ID '=' assignment_st .
   42              | assignment_st . ',' assignment_st
   43              | assignment_st . '+' assignment_st_t
   44              | assignment_st . '-' assignment_st_t

    '+'  shift, and go to state 45
    '-'  shift, and go to state 46

    $default  reduce using rule 41 (assignment_st)


State 60

   42 assignment_st: assignment_st . ',' assignment_st
   43              | assignment_st . '+' assignment_st_t
   44              | assignment_st . '-' assignment_st_t
   51 assignment_st_f: '-' '(' assignment_st . ')'

    '+'  shift, and go to state 45
    '-'  shift, and go to state 46
    ')'  shift, and go to state 76
    ','  shift, and go to state 47


State 61

   50 assignment_st_f: '(' assignment_st ')' .

    $default  reduce using rule 50 (assignment_st_f)


State 62

    8 array_st_usage: ID . '[' NUM ']'
   10 func_call: ID . '(' arg_list_call ')' ';'
   56 assignment_st_f: ID . DP
   57                | ID . DM
   66                | ID .

    DM   shift, and go to state 25
    DP   shift, and go to state 26
    '('  shift, and go to state 27
    '['  shift, and go to state 28

    $default  reduce using rule 66 (assignment_st_f)


State 63

   43 assignment_st: assignment_st '+' assignment_st_t .
   46 assignment_st_t: assignment_st_t . '*' assignment_st_f
   47                | assignment_st_t . '/' assignment_st_f
   48                | assignment_st_t . '%' assignment_st_f

    '*'  shift, and go to state 49
    '/'  shift, and go to state 50
    '%'  shift, and go to state 51

    $default  reduce using rule 43 (assignment_st)


State 64

   44 assignment_st: assignment_st '-' assignment_st_t .
   46 assignment_st_t: assignment_st_t . '*' assignment_st_f
   47                | assignment_st_t . '/' assignment_st_f
   48                | assignment_st_t . '%' assignment_st_f

    '*'  shift, and go to state 49
    '/'  shift, and go to state 50
    '%'  shift, and go to state 51

    $default  reduce using rule 44 (assignment_st)


State 65

   42 assignment_st: assignment_st . ',' assignment_st
   42              | assignment_st ',' assignment_st .
   43              | assignment_st . '+' assignment_st_t
   44              | assignment_st . '-' assignment_st_t

    '+'  shift, and go to state 45
    '-'  shift, and go to state 46
    ','  shift, and go to state 47

    $default  reduce using rule 42 (assignment_st)


State 66

   46 assignment_st_t: assignment_st_t '*' assignment_st_f .

    $default  reduce using rule 46 (assignment_st_t)


State 67

   47 assignment_st_t: assignment_st_t '/' assignment_st_f .

    $default  reduce using rule 47 (assignment_st_t)


State 68

   48 assignment_st_t: assignment_st_t '%' assignment_st_f .

    $default  reduce using rule 48 (assignment_st_t)


State 69

    9 func_declaration: type ID '(' . arg_list_optional ')' compound_st
   10 func_call: ID '(' . arg_list_call ')' ';'

    ID      shift, and go to state 55
    INT     shift, and go to state 5
    FLOAT   shift, and go to state 6
    CHAR    shift, and go to state 7
    DOUBLE  shift, and go to state 8
    VOID    shift, and go to state 9

    ')'       reduce using rule 31 (arg_list_optional)
    ')'       [reduce using rule 33 (arg_list_call)]
    $default  reduce using rule 31 (arg_list_optional)

    arg_list_optional     go to state 77
    arg_list_call         go to state 56
    arg_list_call_actual  go to state 57
    arg_list_actual       go to state 78
    arg_final             go to state 79
    type                  go to state 80


State 70

    7 array_st: ID '[' . NUM ']'
    8 array_st_usage: ID '[' . NUM ']'

    NUM  shift, and go to state 81


State 71

    6 declaration: type array_st ';' .

    $default  reduce using rule 6 (declaration)


State 72

    4 declaration: type assignment_st ';' .

    $default  reduce using rule 4 (declaration)


State 73

   10 func_call: ID '(' arg_list_call ')' . ';'

    ';'  shift, and go to state 82


State 74

   34 arg_list_call_actual: arg_list_call_actual ',' . ID

    ID  shift, and go to state 83


State 75

    8 array_st_usage: ID '[' NUM ']' .

    $default  reduce using rule 8 (array_st_usage)


State 76

   51 assignment_st_f: '-' '(' assignment_st ')' .

    $default  reduce using rule 51 (assignment_st_f)


State 77

    9 func_declaration: type ID '(' arg_list_optional . ')' compound_st

    ')'  shift, and go to state 84


State 78

   30 arg_list_optional: arg_list_actual .
   36 arg_list_actual: arg_list_actual . ',' arg_final

    ','  shift, and go to state 85

    $default  reduce using rule 30 (arg_list_optional)


State 79

   37 arg_list_actual: arg_final .

    $default  reduce using rule 37 (arg_list_actual)


State 80

   38 arg_final: type . ID

    ID  shift, and go to state 86


State 81

    7 array_st: ID '[' NUM . ']'
    8 array_st_usage: ID '[' NUM . ']'

    ']'  shift, and go to state 87


State 82

   10 func_call: ID '(' arg_list_call ')' ';' .

    $default  reduce using rule 10 (func_call)


State 83

   34 arg_list_call_actual: arg_list_call_actual ',' ID .

    $default  reduce using rule 34 (arg_list_call_actual)


State 84

    9 func_declaration: type ID '(' arg_list_optional ')' . compound_st

    '{'  shift, and go to state 88

    compound_st  go to state 89


State 85

   36 arg_list_actual: arg_list_actual ',' . arg_final

    INT     shift, and go to state 5
    FLOAT   shift, and go to state 6
    CHAR    shift, and go to state 7
    DOUBLE  shift, and go to state 8
    VOID    shift, and go to state 9

    arg_final  go to state 90
    type       go to state 80


State 86

   38 arg_final: type ID .

    $default  reduce using rule 38 (arg_final)


State 87

    7 array_st: ID '[' NUM ']' .
    8 array_st_usage: ID '[' NUM ']' .

    ';'       reduce using rule 7 (array_st)
    ';'       [reduce using rule 8 (array_st_usage)]
    $default  reduce using rule 8 (array_st_usage)


State 88

   11 compound_st: '{' . statement_structure '}'

    ID      shift, and go to state 3
    NUM     shift, and go to state 4
    INT     shift, and go to state 5
    FLOAT   shift, and go to state 6
    CHAR    shift, and go to state 7
    DOUBLE  shift, and go to state 8
    VOID    shift, and go to state 9
    AMP     shift, and go to state 10
    DM      shift, and go to state 11
    DP      shift, and go to state 12
    '+'     shift, and go to state 13
    '-'     shift, and go to state 14
    '*'     shift, and go to state 15
    '('     shift, and go to state 16
    FOR     shift, and go to state 91
    WHILE   shift, and go to state 92
    IF      shift, and go to state 93

    declaration           go to state 94
    array_st_usage        go to state 18
    func_call             go to state 20
    statement_structure   go to state 95
    statement             go to state 96
    for_stmt              go to state 97
    while_stmt            go to state 98
    start_if_stmt         go to state 99
    start_if_compound_st  go to state 100
    if_stmt               go to state 101
    assignment_st         go to state 21
    assignment_st_t       go to state 22
    assignment_st_f       go to state 23
    type                  go to state 102


State 89

    9 func_declaration: type ID '(' arg_list_optional ')' compound_st .

    $default  reduce using rule 9 (func_declaration)


State 90

   36 arg_list_actual: arg_list_actual ',' arg_final .

    $default  reduce using rule 36 (arg_list_actual)


State 91

   18 for_stmt: FOR . '(' assignment_st_for ';' expression_for ';' assignment_st_for ')' statement
   19         | FOR . '(' assignment_st_for ';' expression_for ';' assignment_st_for ')' compound_st

    '('  shift, and go to state 103


State 92

   20 while_stmt: WHILE . '(' expression ')' statement
   21           | WHILE . '(' expression ')' compound_st

    '('  shift, and go to state 104


State 93

   22 start_if_stmt: IF . '(' expression ')' statement
   23 start_if_compound_st: IF . '(' expression ')' compound_st

    '('  shift, and go to state 105


State 94

   14 statement: declaration .

    $default  reduce using rule 14 (statement)


State 95

   11 compound_st: '{' statement_structure . '}'
   12 statement_structure: statement_structure . statement

    ID      shift, and go to state 3
    NUM     shift, and go to state 4
    INT     shift, and go to state 5
    FLOAT   shift, and go to state 6
    CHAR    shift, and go to state 7
    DOUBLE  shift, and go to state 8
    VOID    shift, and go to state 9
    AMP     shift, and go to state 10
    DM      shift, and go to state 11
    DP      shift, and go to state 12
    '+'     shift, and go to state 13
    '-'     shift, and go to state 14
    '*'     shift, and go to state 15
    '('     shift, and go to state 16
    FOR     shift, and go to state 91
    WHILE   shift, and go to state 92
    IF      shift, and go to state 93
    '}'     shift, and go to state 106

    declaration           go to state 94
    array_st_usage        go to state 18
    func_call             go to state 20
    statement             go to state 107
    for_stmt              go to state 97
    while_stmt            go to state 98
    start_if_stmt         go to state 99
    start_if_compound_st  go to state 100
    if_stmt               go to state 101
    assignment_st         go to state 21
    assignment_st_t       go to state 22
    assignment_st_f       go to state 23
    type                  go to state 102


State 96

   13 statement_structure: statement .

    $default  reduce using rule 13 (statement_structure)


State 97

   16 statement: for_stmt .

    $default  reduce using rule 16 (statement)


State 98

   15 statement: while_stmt .

    $default  reduce using rule 15 (statement)


State 99

   24 if_stmt: start_if_stmt .
   26        | start_if_stmt . ELSE statement
   27        | start_if_stmt . ELSE compound_st

    ELSE  shift, and go to state 108

    ELSE      [reduce using rule 24 (if_stmt)]
    $default  reduce using rule 24 (if_stmt)


State 100

   25 if_stmt: start_if_compound_st .
   28        | start_if_compound_st . ELSE statement
   29        | start_if_compound_st . ELSE compound_st

    ELSE  shift, and go to state 109

    ELSE      [reduce using rule 25 (if_stmt)]
    $default  reduce using rule 25 (if_stmt)


State 101

   17 statement: if_stmt .

    $default  reduce using rule 17 (statement)


State 102

    4 declaration: type . assignment_st ';'
    6            | type . array_st ';'

    ID   shift, and go to state 110
    NUM  shift, and go to state 4
    AMP  shift, and go to state 10
    DM   shift, and go to state 11
    DP   shift, and go to state 12
    '+'  shift, and go to state 13
    '-'  shift, and go to state 14
    '*'  shift, and go to state 15
    '('  shift, and go to state 16

    array_st         go to state 53
    array_st_usage   go to state 18
    func_call        go to state 20
    assignment_st    go to state 54
    assignment_st_t  go to state 22
    assignment_st_f  go to state 23


State 103

   18 for_stmt: FOR '(' . assignment_st_for ';' expression_for ';' assignment_st_for ')' statement
   19         | FOR '(' . assignment_st_for ';' expression_for ';' assignment_st_for ')' compound_st

    ID   shift, and go to state 3
    NUM  shift, and go to state 4
    AMP  shift, and go to state 10
    DM   shift, and go to state 11
    DP   shift, and go to state 12
    '+'  shift, and go to state 13
    '-'  shift, and go to state 14
    '*'  shift, and go to state 15
    '('  shift, and go to state 16

    $default  reduce using rule 39 (assignment_st_for)

    array_st_usage     go to state 18
    func_call          go to state 20
    assignment_st_for  go to state 111
    assignment_st      go to state 112
    assignment_st_t    go to state 22
    assignment_st_f    go to state 23


State 104

   20 while_stmt: WHILE '(' . expression ')' statement
   21           | WHILE '(' . expression ')' compound_st

    ID   shift, and go to state 113
    NUM  shift, and go to state 114

    expression  go to state 115


State 105

   22 start_if_stmt: IF '(' . expression ')' statement
   23 start_if_compound_st: IF '(' . expression ')' compound_st

    ID   shift, and go to state 113
    NUM  shift, and go to state 114

    expression  go to state 116


State 106

   11 compound_st: '{' statement_structure '}' .

    $default  reduce using rule 11 (compound_st)


State 107

   12 statement_structure: statement_structure statement .

    $default  reduce using rule 12 (statement_structure)


State 108

   26 if_stmt: start_if_stmt ELSE . statement
   27        | start_if_stmt ELSE . compound_st

    ID      shift, and go to state 3
    NUM     shift, and go to state 4
    INT     shift, and go to state 5
    FLOAT   shift, and go to state 6
    CHAR    shift, and go to state 7
    DOUBLE  shift, and go to state 8
    VOID    shift, and go to state 9
    AMP     shift, and go to state 10
    DM      shift, and go to state 11
    DP      shift, and go to state 12
    '+'     shift, and go to state 13
    '-'     shift, and go to state 14
    '*'     shift, and go to state 15
    '('     shift, and go to state 16
    FOR     shift, and go to state 91
    WHILE   shift, and go to state 92
    IF      shift, and go to state 93
    '{'     shift, and go to state 88

    declaration           go to state 94
    array_st_usage        go to state 18
    func_call             go to state 20
    compound_st           go to state 117
    statement             go to state 118
    for_stmt              go to state 97
    while_stmt            go to state 98
    start_if_stmt         go to state 99
    start_if_compound_st  go to state 100
    if_stmt               go to state 101
    assignment_st         go to state 21
    assignment_st_t       go to state 22
    assignment_st_f       go to state 23
    type                  go to state 102


State 109

   28 if_stmt: start_if_compound_st ELSE . statement
   29        | start_if_compound_st ELSE . compound_st

    ID      shift, and go to state 3
    NUM     shift, and go to state 4
    INT     shift, and go to state 5
    FLOAT   shift, and go to state 6
    CHAR    shift, and go to state 7
    DOUBLE  shift, and go to state 8
    VOID    shift, and go to state 9
    AMP     shift, and go to state 10
    DM      shift, and go to state 11
    DP      shift, and go to state 12
    '+'     shift, and go to state 13
    '-'     shift, and go to state 14
    '*'     shift, and go to state 15
    '('     shift, and go to state 16
    FOR     shift, and go to state 91
    WHILE   shift, and go to state 92
    IF      shift, and go to state 93
    '{'     shift, and go to state 88

    declaration           go to state 94
    array_st_usage        go to state 18
    func_call             go to state 20
    compound_st           go to state 119
    statement             go to state 120
    for_stmt              go to state 97
    while_stmt            go to state 98
    start_if_stmt         go to state 99
    start_if_compound_st  go to state 100
    if_stmt               go to state 101
    assignment_st         go to state 21
    assignment_st_t       go to state 22
    assignment_st_f       go to state 23
    type                  go to state 102


State 110

    7 array_st: ID . '[' NUM ']'
    8 array_st_usage: ID . '[' NUM ']'
   10 func_call: ID . '(' arg_list_call ')' ';'
   41 assignment_st: ID . '=' assignment_st
   56 assignment_st_f: ID . DP
   57                | ID . DM
   66                | ID .

    DM   shift, and go to state 25
    DP   shift, and go to state 26
    '('  shift, and go to state 27
    '['  shift, and go to state 70
    '='  shift, and go to state 29

    $default  reduce using rule 66 (assignment_st_f)


State 111

   18 for_stmt: FOR '(' assignment_st_for . ';' expression_for ';' assignment_st_for ')' statement
   19         | FOR '(' assignment_st_for . ';' expression_for ';' assignment_st_for ')' compound_st

    ';'  shift, and go to state 121


State 112

   40 assignment_st_for: assignment_st .
   42 assignment_st: assignment_st . ',' assignment_st
   43              | assignment_st . '+' assignment_st_t
   44              | assignment_st . '-' assignment_st_t

    '+'  shift, and go to state 45
    '-'  shift, and go to state 46
    ','  shift, and go to state 47

    $default  reduce using rule 40 (assignment_st_for)


State 113

   84 expression: ID .

    $default  reduce using rule 84 (expression)


State 114

   85 expression: NUM .

    $default  reduce using rule 85 (expression)


State 115

   20 while_stmt: WHILE '(' expression . ')' statement
   21           | WHILE '(' expression . ')' compound_st
   78 expression: expression . LE expression
   79           | expression . GE expression
   80           | expression . NE expression
   81           | expression . EQ expression
   82           | expression . GT expression
   83           | expression . LT expression

    ')'  shift, and go to state 122
    LE   shift, and go to state 123
    GE   shift, and go to state 124
    EQ   shift, and go to state 125
    NE   shift, and go to state 126
    LT   shift, and go to state 127
    GT   shift, and go to state 128


State 116

   22 start_if_stmt: IF '(' expression . ')' statement
   23 start_if_compound_st: IF '(' expression . ')' compound_st
   78 expression: expression . LE expression
   79           | expression . GE expression
   80           | expression . NE expression
   81           | expression . EQ expression
   82           | expression . GT expression
   83           | expression . LT expression

    ')'  shift, and go to state 129
    LE   shift, and go to state 123
    GE   shift, and go to state 124
    EQ   shift, and go to state 125
    NE   shift, and go to state 126
    LT   shift, and go to state 127
    GT   shift, and go to state 128


State 117

   27 if_stmt: start_if_stmt ELSE compound_st .

    $default  reduce using rule 27 (if_stmt)


State 118

   26 if_stmt: start_if_stmt ELSE statement .

    $default  reduce using rule 26 (if_stmt)


State 119

   29 if_stmt: start_if_compound_st ELSE compound_st .

    $default  reduce using rule 29 (if_stmt)


State 120

   28 if_stmt: start_if_compound_st ELSE statement .

    $default  reduce using rule 28 (if_stmt)


State 121

   18 for_stmt: FOR '(' assignment_st_for ';' . expression_for ';' assignment_st_for ')' statement
   19         | FOR '(' assignment_st_for ';' . expression_for ';' assignment_st_for ')' compound_st

    ID   shift, and go to state 113
    NUM  shift, and go to state 114

    $default  reduce using rule 76 (expression_for)

    expression_for  go to state 130
    expression      go to state 131


State 122

   20 while_stmt: WHILE '(' expression ')' . statement
   21           | WHILE '(' expression ')' . compound_st

    ID      shift, and go to state 3
    NUM     shift, and go to state 4
    INT     shift, and go to state 5
    FLOAT   shift, and go to state 6
    CHAR    shift, and go to state 7
    DOUBLE  shift, and go to state 8
    VOID    shift, and go to state 9
    AMP     shift, and go to state 10
    DM      shift, and go to state 11
    DP      shift, and go to state 12
    '+'     shift, and go to state 13
    '-'     shift, and go to state 14
    '*'     shift, and go to state 15
    '('     shift, and go to state 16
    FOR     shift, and go to state 91
    WHILE   shift, and go to state 92
    IF      shift, and go to state 93
    '{'     shift, and go to state 88

    declaration           go to state 94
    array_st_usage        go to state 18
    func_call             go to state 20
    compound_st           go to state 132
    statement             go to state 133
    for_stmt              go to state 97
    while_stmt            go to state 98
    start_if_stmt         go to state 99
    start_if_compound_st  go to state 100
    if_stmt               go to state 101
    assignment_st         go to state 21
    assignment_st_t       go to state 22
    assignment_st_f       go to state 23
    type                  go to state 102


State 123

   78 expression: expression LE . expression

    ID   shift, and go to state 113
    NUM  shift, and go to state 114

    expression  go to state 134


State 124

   79 expression: expression GE . expression

    ID   shift, and go to state 113
    NUM  shift, and go to state 114

    expression  go to state 135


State 125

   81 expression: expression EQ . expression

    ID   shift, and go to state 113
    NUM  shift, and go to state 114

    expression  go to state 136


State 126

   80 expression: expression NE . expression

    ID   shift, and go to state 113
    NUM  shift, and go to state 114

    expression  go to state 137


State 127

   83 expression: expression LT . expression

    ID   shift, and go to state 113
    NUM  shift, and go to state 114

    expression  go to state 138


State 128

   82 expression: expression GT . expression

    ID   shift, and go to state 113
    NUM  shift, and go to state 114

    expression  go to state 139


State 129

   22 start_if_stmt: IF '(' expression ')' . statement
   23 start_if_compound_st: IF '(' expression ')' . compound_st

    ID      shift, and go to state 3
    NUM     shift, and go to state 4
    INT     shift, and go to state 5
    FLOAT   shift, and go to state 6
    CHAR    shift, and go to state 7
    DOUBLE  shift, and go to state 8
    VOID    shift, and go to state 9
    AMP     shift, and go to state 10
    DM      shift, and go to state 11
    DP      shift, and go to state 12
    '+'     shift, and go to state 13
    '-'     shift, and go to state 14
    '*'     shift, and go to state 15
    '('     shift, and go to state 16
    FOR     shift, and go to state 91
    WHILE   shift, and go to state 92
    IF      shift, and go to state 93
    '{'     shift, and go to state 88

    declaration           go to state 94
    array_st_usage        go to state 18
    func_call             go to state 20
    compound_st           go to state 140
    statement             go to state 141
    for_stmt              go to state 97
    while_stmt            go to state 98
    start_if_stmt         go to state 99
    start_if_compound_st  go to state 100
    if_stmt               go to state 101
    assignment_st         go to state 21
    assignment_st_t       go to state 22
    assignment_st_f       go to state 23
    type                  go to state 102


State 130

   18 for_stmt: FOR '(' assignment_st_for ';' expression_for . ';' assignment_st_for ')' statement
   19         | FOR '(' assignment_st_for ';' expression_for . ';' assignment_st_for ')' compound_st

    ';'  shift, and go to state 142


State 131

   77 expression_for: expression .
   78 expression: expression . LE expression
   79           | expression . GE expression
   80           | expression . NE expression
   81           | expression . EQ expression
   82           | expression . GT expression
   83           | expression . LT expression

    LE  shift, and go to state 123
    GE  shift, and go to state 124
    EQ  shift, and go to state 125
    NE  shift, and go to state 126
    LT  shift, and go to state 127
    GT  shift, and go to state 128

    $default  reduce using rule 77 (expression_for)


State 132

   21 while_stmt: WHILE '(' expression ')' compound_st .

    $default  reduce using rule 21 (while_stmt)


State 133

   20 while_stmt: WHILE '(' expression ')' statement .

    $default  reduce using rule 20 (while_stmt)


State 134

   78 expression: expression . LE expression
   78           | expression LE expression .
   79           | expression . GE expression
   80           | expression . NE expression
   81           | expression . EQ expression
   82           | expression . GT expression
   83           | expression . LT expression

    $default  reduce using rule 78 (expression)


State 135

   78 expression: expression . LE expression
   79           | expression . GE expression
   79           | expression GE expression .
   80           | expression . NE expression
   81           | expression . EQ expression
   82           | expression . GT expression
   83           | expression . LT expression

    $default  reduce using rule 79 (expression)


State 136

   78 expression: expression . LE expression
   79           | expression . GE expression
   80           | expression . NE expression
   81           | expression . EQ expression
   81           | expression EQ expression .
   82           | expression . GT expression
   83           | expression . LT expression

    $default  reduce using rule 81 (expression)


State 137

   78 expression: expression . LE expression
   79           | expression . GE expression
   80           | expression . NE expression
   80           | expression NE expression .
   81           | expression . EQ expression
   82           | expression . GT expression
   83           | expression . LT expression

    $default  reduce using rule 80 (expression)


State 138

   78 expression: expression . LE expression
   79           | expression . GE expression
   80           | expression . NE expression
   81           | expression . EQ expression
   82           | expression . GT expression
   83           | expression . LT expression
   83           | expression LT expression .

    $default  reduce using rule 83 (expression)


State 139

   78 expression: expression . LE expression
   79           | expression . GE expression
   80           | expression . NE expression
   81           | expression . EQ expression
   82           | expression . GT expression
   82           | expression GT expression .
   83           | expression . LT expression

    $default  reduce using rule 82 (expression)


State 140

   23 start_if_compound_st: IF '(' expression ')' compound_st .

    $default  reduce using rule 23 (start_if_compound_st)


State 141

   22 start_if_stmt: IF '(' expression ')' statement .

    $default  reduce using rule 22 (start_if_stmt)


State 142

   18 for_stmt: FOR '(' assignment_st_for ';' expression_for ';' . assignment_st_for ')' statement
   19         | FOR '(' assignment_st_for ';' expression_for ';' . assignment_st_for ')' compound_st

    ID   shift, and go to state 3
    NUM  shift, and go to state 4
    AMP  shift, and go to state 10
    DM   shift, and go to state 11
    DP   shift, and go to state 12
    '+'  shift, and go to state 13
    '-'  shift, and go to state 14
    '*'  shift, and go to state 15
    '('  shift, and go to state 16

    $default  reduce using rule 39 (assignment_st_for)

    array_st_usage     go to state 18
    func_call          go to state 20
    assignment_st_for  go to state 143
    assignment_st      go to state 112
    assignment_st_t    go to state 22
    assignment_st_f    go to state 23


State 143

   18 for_stmt: FOR '(' assignment_st_for ';' expression_for ';' assignment_st_for . ')' statement
   19         | FOR '(' assignment_st_for ';' expression_for ';' assignment_st_for . ')' compound_st

    ')'  shift, and go to state 144


State 144

   18 for_stmt: FOR '(' assignment_st_for ';' expression_for ';' assignment_st_for ')' . statement
   19         | FOR '(' assignment_st_for ';' expression_for ';' assignment_st_for ')' . compound_st

    ID      shift, and go to state 3
    NUM     shift, and go to state 4
    INT     shift, and go to state 5
    FLOAT   shift, and go to state 6
    CHAR    shift, and go to state 7
    DOUBLE  shift, and go to state 8
    VOID    shift, and go to state 9
    AMP     shift, and go to state 10
    DM      shift, and go to state 11
    DP      shift, and go to state 12
    '+'     shift, and go to state 13
    '-'     shift, and go to state 14
    '*'     shift, and go to state 15
    '('     shift, and go to state 16
    FOR     shift, and go to state 91
    WHILE   shift, and go to state 92
    IF      shift, and go to state 93
    '{'     shift, and go to state 88

    declaration           go to state 94
    array_st_usage        go to state 18
    func_call             go to state 20
    compound_st           go to state 145
    statement             go to state 146
    for_stmt              go to state 97
    while_stmt            go to state 98
    start_if_stmt         go to state 99
    start_if_compound_st  go to state 100
    if_stmt               go to state 101
    assignment_st         go to state 21
    assignment_st_t       go to state 22
    assignment_st_f       go to state 23
    type                  go to state 102


State 145

   19 for_stmt: FOR '(' assignment_st_for ';' expression_for ';' assignment_st_for ')' compound_st .

    $default  reduce using rule 19 (for_stmt)


State 146

   18 for_stmt: FOR '(' assignment_st_for ';' expression_for ';' assignment_st_for ')' statement .

    $default  reduce using rule 18 (for_stmt)
